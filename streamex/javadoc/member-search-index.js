memberSearchIndex = [{"p":"one.util.streamex","c":"DoubleCollector","l":"accumulator()"},{"p":"one.util.streamex","c":"IntCollector","l":"accumulator()"},{"p":"one.util.streamex","c":"Joining","l":"accumulator()"},{"p":"one.util.streamex","c":"LongCollector","l":"accumulator()"},{"p":"one.util.streamex","c":"EntryStream","l":"allMatch(BiPredicate<? super K, ? super V>)","url":"allMatch(java.util.function.BiPredicate)"},{"p":"one.util.streamex","c":"DoubleStreamEx","l":"allMatch(DoublePredicate)","url":"allMatch(java.util.function.DoublePredicate)"},{"p":"one.util.streamex","c":"IntStreamEx","l":"allMatch(IntPredicate)","url":"allMatch(java.util.function.IntPredicate)"},{"p":"one.util.streamex","c":"LongStreamEx","l":"allMatch(LongPredicate)","url":"allMatch(java.util.function.LongPredicate)"},{"p":"one.util.streamex","c":"AbstractStreamEx","l":"allMatch(Predicate<? super T>)","url":"allMatch(java.util.function.Predicate)"},{"p":"one.util.streamex","c":"MoreCollectors","l":"andingInt(ToIntFunction<T>)","url":"andingInt(java.util.function.ToIntFunction)"},{"p":"one.util.streamex","c":"MoreCollectors","l":"andingLong(ToLongFunction<T>)","url":"andingLong(java.util.function.ToLongFunction)"},{"p":"one.util.streamex","c":"DoubleCollector","l":"andThen(Function<R, RR>)","url":"andThen(java.util.function.Function)"},{"p":"one.util.streamex","c":"IntCollector","l":"andThen(Function<R, RR>)","url":"andThen(java.util.function.Function)"},{"p":"one.util.streamex","c":"LongCollector","l":"andThen(Function<R, RR>)","url":"andThen(java.util.function.Function)"},{"p":"one.util.streamex","c":"EntryStream","l":"anyMatch(BiPredicate<? super K, ? super V>)","url":"anyMatch(java.util.function.BiPredicate)"},{"p":"one.util.streamex","c":"DoubleStreamEx","l":"anyMatch(DoublePredicate)","url":"anyMatch(java.util.function.DoublePredicate)"},{"p":"one.util.streamex","c":"IntStreamEx","l":"anyMatch(IntPredicate)","url":"anyMatch(java.util.function.IntPredicate)"},{"p":"one.util.streamex","c":"LongStreamEx","l":"anyMatch(LongPredicate)","url":"anyMatch(java.util.function.LongPredicate)"},{"p":"one.util.streamex","c":"AbstractStreamEx","l":"anyMatch(Predicate<? super T>)","url":"anyMatch(java.util.function.Predicate)"},{"p":"one.util.streamex","c":"StreamEx","l":"append(Collection<? extends T>)","url":"append(java.util.Collection)"},{"p":"one.util.streamex","c":"DoubleStreamEx","l":"append(double...)"},{"p":"one.util.streamex","c":"DoubleStreamEx","l":"append(DoubleStream)","url":"append(java.util.stream.DoubleStream)"},{"p":"one.util.streamex","c":"IntStreamEx","l":"append(int...)"},{"p":"one.util.streamex","c":"IntStreamEx","l":"append(IntStream)","url":"append(java.util.stream.IntStream)"},{"p":"one.util.streamex","c":"EntryStream","l":"append(K, V, K, V, K, V)","url":"append(K,V,K,V,K,V)"},{"p":"one.util.streamex","c":"EntryStream","l":"append(K, V, K, V)","url":"append(K,V,K,V)"},{"p":"one.util.streamex","c":"EntryStream","l":"append(K, V)","url":"append(K,V)"},{"p":"one.util.streamex","c":"LongStreamEx","l":"append(long...)"},{"p":"one.util.streamex","c":"LongStreamEx","l":"append(LongStream)","url":"append(java.util.stream.LongStream)"},{"p":"one.util.streamex","c":"EntryStream","l":"append(Map<K, V>)","url":"append(java.util.Map)"},{"p":"one.util.streamex","c":"AbstractStreamEx","l":"append(Stream<? extends T>)","url":"append(java.util.stream.Stream)"},{"p":"one.util.streamex","c":"StreamEx","l":"append(T...)"},{"p":"one.util.streamex","c":"StreamEx","l":"append(T)"},{"p":"one.util.streamex","c":"IntStreamEx","l":"asByteInputStream()"},{"p":"one.util.streamex","c":"IntStreamEx","l":"asDoubleStream()"},{"p":"one.util.streamex","c":"LongStreamEx","l":"asDoubleStream()"},{"p":"one.util.streamex","c":"IntStreamEx","l":"asLongStream()"},{"p":"one.util.streamex","c":"DoubleStreamEx","l":"atLeast(double)"},{"p":"one.util.streamex","c":"IntStreamEx","l":"atLeast(int)"},{"p":"one.util.streamex","c":"LongStreamEx","l":"atLeast(long)"},{"p":"one.util.streamex","c":"DoubleStreamEx","l":"atMost(double)"},{"p":"one.util.streamex","c":"IntStreamEx","l":"atMost(int)"},{"p":"one.util.streamex","c":"LongStreamEx","l":"atMost(long)"},{"p":"one.util.streamex","c":"DoubleStreamEx","l":"average()"},{"p":"one.util.streamex","c":"IntStreamEx","l":"average()"},{"p":"one.util.streamex","c":"LongStreamEx","l":"average()"},{"p":"one.util.streamex","c":"DoubleCollector","l":"averaging()"},{"p":"one.util.streamex","c":"IntCollector","l":"averaging()"},{"p":"one.util.streamex","c":"LongCollector","l":"averaging()"},{"p":"one.util.streamex","c":"DoubleStreamEx","l":"boxed()"},{"p":"one.util.streamex","c":"IntStreamEx","l":"boxed()"},{"p":"one.util.streamex","c":"LongStreamEx","l":"boxed()"},{"p":"one.util.streamex","c":"StreamEx","l":"cartesianPower(int, Collection<T>, U, BiFunction<U, ? super T, U>)","url":"cartesianPower(int,java.util.Collection,U,java.util.function.BiFunction)"},{"p":"one.util.streamex","c":"StreamEx","l":"cartesianPower(int, Collection<T>)","url":"cartesianPower(int,java.util.Collection)"},{"p":"one.util.streamex","c":"StreamEx","l":"cartesianProduct(Collection<? extends Collection<T>>, U, BiFunction<U, ? super T, U>)","url":"cartesianProduct(java.util.Collection,U,java.util.function.BiFunction)"},{"p":"one.util.streamex","c":"StreamEx","l":"cartesianProduct(Collection<? extends Collection<T>>)","url":"cartesianProduct(java.util.Collection)"},{"p":"one.util.streamex","c":"DoubleStreamEx","l":"chain(Function<? super DoubleStreamEx, U>)","url":"chain(java.util.function.Function)"},{"p":"one.util.streamex","c":"IntStreamEx","l":"chain(Function<? super IntStreamEx, U>)","url":"chain(java.util.function.Function)"},{"p":"one.util.streamex","c":"LongStreamEx","l":"chain(Function<? super LongStreamEx, U>)","url":"chain(java.util.function.Function)"},{"p":"one.util.streamex","c":"AbstractStreamEx","l":"chain(Function<? super S, U>)","url":"chain(java.util.function.Function)"},{"p":"one.util.streamex","c":"Joining","l":"characteristics()"},{"p":"one.util.streamex","c":"IntStreamEx","l":"charsToString()"},{"p":"one.util.streamex","c":"IntStreamEx","l":"codePointsToString()"},{"p":"one.util.streamex","c":"StreamEx","l":"collapse(BiPredicate<? super T, ? super T>, BinaryOperator<T>)","url":"collapse(java.util.function.BiPredicate,java.util.function.BinaryOperator)"},{"p":"one.util.streamex","c":"StreamEx","l":"collapse(BiPredicate<? super T, ? super T>, Collector<? super T, A, R>)","url":"collapse(java.util.function.BiPredicate,java.util.stream.Collector)"},{"p":"one.util.streamex","c":"StreamEx","l":"collapse(BiPredicate<? super T, ? super T>)","url":"collapse(java.util.function.BiPredicate)"},{"p":"one.util.streamex","c":"EntryStream","l":"collapseKeys()"},{"p":"one.util.streamex","c":"EntryStream","l":"collapseKeys(BinaryOperator<V>)","url":"collapseKeys(java.util.function.BinaryOperator)"},{"p":"one.util.streamex","c":"EntryStream","l":"collapseKeys(Collector<? super V, A, R>)","url":"collapseKeys(java.util.stream.Collector)"},{"p":"one.util.streamex","c":"AbstractStreamEx","l":"collect(Collector<? super T, A, R>)","url":"collect(java.util.stream.Collector)"},{"p":"one.util.streamex","c":"DoubleStreamEx","l":"collect(DoubleCollector<A, R>)","url":"collect(one.util.streamex.DoubleCollector)"},{"p":"one.util.streamex","c":"IntStreamEx","l":"collect(IntCollector<A, R>)","url":"collect(one.util.streamex.IntCollector)"},{"p":"one.util.streamex","c":"LongStreamEx","l":"collect(LongCollector<A, R>)","url":"collect(one.util.streamex.LongCollector)"},{"p":"one.util.streamex","c":"AbstractStreamEx","l":"collect(Supplier<R>, BiConsumer<R, ? super T>, BiConsumer<R, R>)","url":"collect(java.util.function.Supplier,java.util.function.BiConsumer,java.util.function.BiConsumer)"},{"p":"one.util.streamex","c":"DoubleStreamEx","l":"collect(Supplier<R>, ObjDoubleConsumer<R>, BiConsumer<R, R>)","url":"collect(java.util.function.Supplier,java.util.function.ObjDoubleConsumer,java.util.function.BiConsumer)"},{"p":"one.util.streamex","c":"IntStreamEx","l":"collect(Supplier<R>, ObjIntConsumer<R>, BiConsumer<R, R>)","url":"collect(java.util.function.Supplier,java.util.function.ObjIntConsumer,java.util.function.BiConsumer)"},{"p":"one.util.streamex","c":"LongStreamEx","l":"collect(Supplier<R>, ObjLongConsumer<R>, BiConsumer<R, R>)","url":"collect(java.util.function.Supplier,java.util.function.ObjLongConsumer,java.util.function.BiConsumer)"},{"p":"one.util.streamex","c":"MoreCollectors","l":"collectingAndThen(Collector<T, A, R>, Function<R, RR>)","url":"collectingAndThen(java.util.stream.Collector,java.util.function.Function)"},{"p":"one.util.streamex","c":"Joining","l":"combiner()"},{"p":"one.util.streamex","c":"MoreCollectors","l":"commonPrefix()"},{"p":"one.util.streamex","c":"MoreCollectors","l":"commonSuffix()"},{"p":"one.util.streamex","c":"DoubleStreamEx","l":"constant(double, long)","url":"constant(double,long)"},{"p":"one.util.streamex","c":"IntStreamEx","l":"constant(int, long)","url":"constant(int,long)"},{"p":"one.util.streamex","c":"LongStreamEx","l":"constant(long, long)","url":"constant(long,long)"},{"p":"one.util.streamex","c":"StreamEx","l":"constant(T, long)","url":"constant(T,long)"},{"p":"one.util.streamex","c":"AbstractStreamEx","l":"count()"},{"p":"one.util.streamex","c":"DoubleStreamEx","l":"count()"},{"p":"one.util.streamex","c":"IntStreamEx","l":"count()"},{"p":"one.util.streamex","c":"LongStreamEx","l":"count()"},{"p":"one.util.streamex","c":"DoubleCollector","l":"counting()"},{"p":"one.util.streamex","c":"IntCollector","l":"counting()"},{"p":"one.util.streamex","c":"LongCollector","l":"counting()"},{"p":"one.util.streamex","c":"DoubleCollector","l":"countingInt()"},{"p":"one.util.streamex","c":"IntCollector","l":"countingInt()"},{"p":"one.util.streamex","c":"LongCollector","l":"countingInt()"},{"p":"one.util.streamex","c":"MoreCollectors","l":"countingInt()"},{"p":"one.util.streamex","c":"StreamEx","l":"cross(Collection<? extends V>)","url":"cross(java.util.Collection)"},{"p":"one.util.streamex","c":"StreamEx","l":"cross(Function<? super T, ? extends Stream<? extends V>>)","url":"cross(java.util.function.Function)"},{"p":"one.util.streamex","c":"StreamEx","l":"cross(V...)"},{"p":"one.util.streamex","c":"Joining","l":"cutAfterDelimiter()"},{"p":"one.util.streamex","c":"Joining","l":"cutAnywhere()"},{"p":"one.util.streamex","c":"Joining","l":"cutAtCodePoint()"},{"p":"one.util.streamex","c":"Joining","l":"cutAtGrapheme()"},{"p":"one.util.streamex","c":"Joining","l":"cutAtWord()"},{"p":"one.util.streamex","c":"Joining","l":"cutBeforeDelimiter()"},{"p":"one.util.streamex","c":"AbstractStreamEx","l":"distinct()"},{"p":"one.util.streamex","c":"DoubleStreamEx","l":"distinct()"},{"p":"one.util.streamex","c":"IntStreamEx","l":"distinct()"},{"p":"one.util.streamex","c":"LongStreamEx","l":"distinct()"},{"p":"one.util.streamex","c":"AbstractStreamEx","l":"distinct(Function<? super T, ?>)","url":"distinct(java.util.function.Function)"},{"p":"one.util.streamex","c":"AbstractStreamEx","l":"distinct(long)"},{"p":"one.util.streamex","c":"MoreCollectors","l":"distinctBy(Function<? super T, ?>)","url":"distinctBy(java.util.function.Function)"},{"p":"one.util.streamex","c":"MoreCollectors","l":"distinctCount(Function<? super T, ?>)","url":"distinctCount(java.util.function.Function)"},{"p":"one.util.streamex","c":"EntryStream","l":"distinctKeys()"},{"p":"one.util.streamex","c":"EntryStream","l":"distinctValues()"},{"p":"one.util.streamex","c":"MoreCollectors","l":"dominators(BiPredicate<? super T, ? super T>)","url":"dominators(java.util.function.BiPredicate)"},{"p":"one.util.streamex","c":"DoubleCollector","l":"doubleAccumulator()"},{"p":"one.util.streamex","c":"DoubleStreamEx","l":"dropWhile(DoublePredicate)","url":"dropWhile(java.util.function.DoublePredicate)"},{"p":"one.util.streamex","c":"IntStreamEx","l":"dropWhile(IntPredicate)","url":"dropWhile(java.util.function.IntPredicate)"},{"p":"one.util.streamex","c":"LongStreamEx","l":"dropWhile(LongPredicate)","url":"dropWhile(java.util.function.LongPredicate)"},{"p":"one.util.streamex","c":"AbstractStreamEx","l":"dropWhile(Predicate<? super T>)","url":"dropWhile(java.util.function.Predicate)"},{"p":"one.util.streamex","c":"IntStreamEx","l":"elements(double[])"},{"p":"one.util.streamex","c":"IntStreamEx","l":"elements(int[])"},{"p":"one.util.streamex","c":"IntStreamEx","l":"elements(List<U>)","url":"elements(java.util.List)"},{"p":"one.util.streamex","c":"IntStreamEx","l":"elements(long[])"},{"p":"one.util.streamex","c":"IntStreamEx","l":"elements(U[])"},{"p":"one.util.streamex","c":"Joining","l":"ellipsis(CharSequence)","url":"ellipsis(java.lang.CharSequence)"},{"p":"one.util.streamex","c":"DoubleStreamEx","l":"empty()"},{"p":"one.util.streamex","c":"EntryStream","l":"empty()"},{"p":"one.util.streamex","c":"IntStreamEx","l":"empty()"},{"p":"one.util.streamex","c":"LongStreamEx","l":"empty()"},{"p":"one.util.streamex","c":"StreamEx","l":"empty()"},{"p":"one.util.streamex","c":"DoubleStreamEx","l":"filter(DoublePredicate)","url":"filter(java.util.function.DoublePredicate)"},{"p":"one.util.streamex","c":"IntStreamEx","l":"filter(IntPredicate)","url":"filter(java.util.function.IntPredicate)"},{"p":"one.util.streamex","c":"LongStreamEx","l":"filter(LongPredicate)","url":"filter(java.util.function.LongPredicate)"},{"p":"one.util.streamex","c":"AbstractStreamEx","l":"filter(Predicate<? super T>)","url":"filter(java.util.function.Predicate)"},{"p":"one.util.streamex","c":"StreamEx","l":"filterBy(Function<? super T, ? extends K>, K)","url":"filterBy(java.util.function.Function,K)"},{"p":"one.util.streamex","c":"MoreCollectors","l":"filtering(Predicate<? super T>, Collector<T, A, R>)","url":"filtering(java.util.function.Predicate,java.util.stream.Collector)"},{"p":"one.util.streamex","c":"MoreCollectors","l":"filtering(Predicate<? super T>)","url":"filtering(java.util.function.Predicate)"},{"p":"one.util.streamex","c":"EntryStream","l":"filterKeys(Predicate<? super K>)","url":"filterKeys(java.util.function.Predicate)"},{"p":"one.util.streamex","c":"EntryStream","l":"filterKeyValue(BiPredicate<? super K, ? super V>)","url":"filterKeyValue(java.util.function.BiPredicate)"},{"p":"one.util.streamex","c":"EntryStream","l":"filterValues(Predicate<? super V>)","url":"filterValues(java.util.function.Predicate)"},{"p":"one.util.streamex","c":"AbstractStreamEx","l":"findAny()"},{"p":"one.util.streamex","c":"DoubleStreamEx","l":"findAny()"},{"p":"one.util.streamex","c":"IntStreamEx","l":"findAny()"},{"p":"one.util.streamex","c":"LongStreamEx","l":"findAny()"},{"p":"one.util.streamex","c":"DoubleStreamEx","l":"findAny(DoublePredicate)","url":"findAny(java.util.function.DoublePredicate)"},{"p":"one.util.streamex","c":"IntStreamEx","l":"findAny(IntPredicate)","url":"findAny(java.util.function.IntPredicate)"},{"p":"one.util.streamex","c":"LongStreamEx","l":"findAny(LongPredicate)","url":"findAny(java.util.function.LongPredicate)"},{"p":"one.util.streamex","c":"AbstractStreamEx","l":"findAny(Predicate<? super T>)","url":"findAny(java.util.function.Predicate)"},{"p":"one.util.streamex","c":"AbstractStreamEx","l":"findFirst()"},{"p":"one.util.streamex","c":"DoubleStreamEx","l":"findFirst()"},{"p":"one.util.streamex","c":"IntStreamEx","l":"findFirst()"},{"p":"one.util.streamex","c":"LongStreamEx","l":"findFirst()"},{"p":"one.util.streamex","c":"DoubleStreamEx","l":"findFirst(DoublePredicate)","url":"findFirst(java.util.function.DoublePredicate)"},{"p":"one.util.streamex","c":"IntStreamEx","l":"findFirst(IntPredicate)","url":"findFirst(java.util.function.IntPredicate)"},{"p":"one.util.streamex","c":"LongStreamEx","l":"findFirst(LongPredicate)","url":"findFirst(java.util.function.LongPredicate)"},{"p":"one.util.streamex","c":"AbstractStreamEx","l":"findFirst(Predicate<? super T>)","url":"findFirst(java.util.function.Predicate)"},{"p":"one.util.streamex","c":"Joining","l":"finisher()"},{"p":"one.util.streamex","c":"MoreCollectors","l":"first()"},{"p":"one.util.streamex","c":"AbstractStreamEx","l":"flatArray(Function<? super T, ? extends R[]>)","url":"flatArray(java.util.function.Function)"},{"p":"one.util.streamex","c":"AbstractStreamEx","l":"flatCollection(Function<? super T, ? extends Collection<? extends R>>)","url":"flatCollection(java.util.function.Function)"},{"p":"one.util.streamex","c":"DoubleStreamEx","l":"flatMap(DoubleFunction<? extends DoubleStream>)","url":"flatMap(java.util.function.DoubleFunction)"},{"p":"one.util.streamex","c":"AbstractStreamEx","l":"flatMap(Function<? super T, ? extends Stream<? extends R>>)","url":"flatMap(java.util.function.Function)"},{"p":"one.util.streamex","c":"IntStreamEx","l":"flatMap(IntFunction<? extends IntStream>)","url":"flatMap(java.util.function.IntFunction)"},{"p":"one.util.streamex","c":"LongStreamEx","l":"flatMap(LongFunction<? extends LongStream>)","url":"flatMap(java.util.function.LongFunction)"},{"p":"one.util.streamex","c":"EntryStream","l":"flatMapKeys(Function<? super K, ? extends Stream<? extends KK>>)","url":"flatMapKeys(java.util.function.Function)"},{"p":"one.util.streamex","c":"EntryStream","l":"flatMapKeyValue(BiFunction<? super K, ? super V, ? extends Stream<? extends R>>)","url":"flatMapKeyValue(java.util.function.BiFunction)"},{"p":"one.util.streamex","c":"MoreCollectors","l":"flatMapping(Function<? super T, ? extends Stream<? extends U>>, Collector<? super U, A, R>)","url":"flatMapping(java.util.function.Function,java.util.stream.Collector)"},{"p":"one.util.streamex","c":"MoreCollectors","l":"flatMapping(Function<? super T, ? extends Stream<? extends U>>)","url":"flatMapping(java.util.function.Function)"},{"p":"one.util.streamex","c":"AbstractStreamEx","l":"flatMapToDouble(Function<? super T, ? extends DoubleStream>)","url":"flatMapToDouble(java.util.function.Function)"},{"p":"one.util.streamex","c":"IntStreamEx","l":"flatMapToDouble(IntFunction<? extends DoubleStream>)","url":"flatMapToDouble(java.util.function.IntFunction)"},{"p":"one.util.streamex","c":"LongStreamEx","l":"flatMapToDouble(LongFunction<? extends DoubleStream>)","url":"flatMapToDouble(java.util.function.LongFunction)"},{"p":"one.util.streamex","c":"StreamEx","l":"flatMapToEntry(Function<? super T, ? extends Map<K, V>>)","url":"flatMapToEntry(java.util.function.Function)"},{"p":"one.util.streamex","c":"DoubleStreamEx","l":"flatMapToInt(DoubleFunction<? extends IntStream>)","url":"flatMapToInt(java.util.function.DoubleFunction)"},{"p":"one.util.streamex","c":"AbstractStreamEx","l":"flatMapToInt(Function<? super T, ? extends IntStream>)","url":"flatMapToInt(java.util.function.Function)"},{"p":"one.util.streamex","c":"LongStreamEx","l":"flatMapToInt(LongFunction<? extends IntStream>)","url":"flatMapToInt(java.util.function.LongFunction)"},{"p":"one.util.streamex","c":"EntryStream","l":"flatMapToKey(BiFunction<? super K, ? super V, ? extends Stream<? extends KK>>)","url":"flatMapToKey(java.util.function.BiFunction)"},{"p":"one.util.streamex","c":"DoubleStreamEx","l":"flatMapToLong(DoubleFunction<? extends LongStream>)","url":"flatMapToLong(java.util.function.DoubleFunction)"},{"p":"one.util.streamex","c":"AbstractStreamEx","l":"flatMapToLong(Function<? super T, ? extends LongStream>)","url":"flatMapToLong(java.util.function.Function)"},{"p":"one.util.streamex","c":"IntStreamEx","l":"flatMapToLong(IntFunction<? extends LongStream>)","url":"flatMapToLong(java.util.function.IntFunction)"},{"p":"one.util.streamex","c":"DoubleStreamEx","l":"flatMapToObj(DoubleFunction<? extends Stream<R>>)","url":"flatMapToObj(java.util.function.DoubleFunction)"},{"p":"one.util.streamex","c":"IntStreamEx","l":"flatMapToObj(IntFunction<? extends Stream<R>>)","url":"flatMapToObj(java.util.function.IntFunction)"},{"p":"one.util.streamex","c":"LongStreamEx","l":"flatMapToObj(LongFunction<? extends Stream<R>>)","url":"flatMapToObj(java.util.function.LongFunction)"},{"p":"one.util.streamex","c":"EntryStream","l":"flatMapToValue(BiFunction<? super K, ? super V, ? extends Stream<? extends VV>>)","url":"flatMapToValue(java.util.function.BiFunction)"},{"p":"one.util.streamex","c":"EntryStream","l":"flatMapValues(Function<? super V, ? extends Stream<? extends VV>>)","url":"flatMapValues(java.util.function.Function)"},{"p":"one.util.streamex","c":"AbstractStreamEx","l":"foldLeft(BinaryOperator<T>)","url":"foldLeft(java.util.function.BinaryOperator)"},{"p":"one.util.streamex","c":"DoubleStreamEx","l":"foldLeft(double, DoubleBinaryOperator)","url":"foldLeft(double,java.util.function.DoubleBinaryOperator)"},{"p":"one.util.streamex","c":"DoubleStreamEx","l":"foldLeft(DoubleBinaryOperator)","url":"foldLeft(java.util.function.DoubleBinaryOperator)"},{"p":"one.util.streamex","c":"IntStreamEx","l":"foldLeft(int, IntBinaryOperator)","url":"foldLeft(int,java.util.function.IntBinaryOperator)"},{"p":"one.util.streamex","c":"IntStreamEx","l":"foldLeft(IntBinaryOperator)","url":"foldLeft(java.util.function.IntBinaryOperator)"},{"p":"one.util.streamex","c":"LongStreamEx","l":"foldLeft(long, LongBinaryOperator)","url":"foldLeft(long,java.util.function.LongBinaryOperator)"},{"p":"one.util.streamex","c":"LongStreamEx","l":"foldLeft(LongBinaryOperator)","url":"foldLeft(java.util.function.LongBinaryOperator)"},{"p":"one.util.streamex","c":"AbstractStreamEx","l":"foldLeft(U, BiFunction<U, ? super T, U>)","url":"foldLeft(U,java.util.function.BiFunction)"},{"p":"one.util.streamex","c":"AbstractStreamEx","l":"foldRight(BinaryOperator<T>)","url":"foldRight(java.util.function.BinaryOperator)"},{"p":"one.util.streamex","c":"AbstractStreamEx","l":"foldRight(U, BiFunction<? super T, U, U>)","url":"foldRight(U,java.util.function.BiFunction)"},{"p":"one.util.streamex","c":"AbstractStreamEx","l":"forEach(Consumer<? super T>)","url":"forEach(java.util.function.Consumer)"},{"p":"one.util.streamex","c":"DoubleStreamEx","l":"forEach(DoubleConsumer)","url":"forEach(java.util.function.DoubleConsumer)"},{"p":"one.util.streamex","c":"IntStreamEx","l":"forEach(IntConsumer)","url":"forEach(java.util.function.IntConsumer)"},{"p":"one.util.streamex","c":"LongStreamEx","l":"forEach(LongConsumer)","url":"forEach(java.util.function.LongConsumer)"},{"p":"one.util.streamex","c":"AbstractStreamEx","l":"forEachOrdered(Consumer<? super T>)","url":"forEachOrdered(java.util.function.Consumer)"},{"p":"one.util.streamex","c":"DoubleStreamEx","l":"forEachOrdered(DoubleConsumer)","url":"forEachOrdered(java.util.function.DoubleConsumer)"},{"p":"one.util.streamex","c":"IntStreamEx","l":"forEachOrdered(IntConsumer)","url":"forEachOrdered(java.util.function.IntConsumer)"},{"p":"one.util.streamex","c":"LongStreamEx","l":"forEachOrdered(LongConsumer)","url":"forEachOrdered(java.util.function.LongConsumer)"},{"p":"one.util.streamex","c":"EntryStream","l":"forKeyValue(BiConsumer<? super K, ? super V>)","url":"forKeyValue(java.util.function.BiConsumer)"},{"p":"one.util.streamex","c":"StreamEx","l":"forPairs(BiConsumer<? super T, ? super T>)","url":"forPairs(java.util.function.BiConsumer)"},{"p":"one.util.streamex","c":"DoubleStreamEx","l":"generate(DoubleSupplier)","url":"generate(java.util.function.DoubleSupplier)"},{"p":"one.util.streamex","c":"IntStreamEx","l":"generate(IntSupplier)","url":"generate(java.util.function.IntSupplier)"},{"p":"one.util.streamex","c":"LongStreamEx","l":"generate(LongSupplier)","url":"generate(java.util.function.LongSupplier)"},{"p":"one.util.streamex","c":"EntryStream","l":"generate(Supplier<? extends K>, Supplier<? extends V>)","url":"generate(java.util.function.Supplier,java.util.function.Supplier)"},{"p":"one.util.streamex","c":"StreamEx","l":"generate(Supplier<T>)","url":"generate(java.util.function.Supplier)"},{"p":"one.util.streamex","c":"DoubleStreamEx","l":"greater(double)"},{"p":"one.util.streamex","c":"IntStreamEx","l":"greater(int)"},{"p":"one.util.streamex","c":"LongStreamEx","l":"greater(long)"},{"p":"one.util.streamex","c":"MoreCollectors","l":"greatest(Comparator<? super T>, int)","url":"greatest(java.util.Comparator,int)"},{"p":"one.util.streamex","c":"MoreCollectors","l":"greatest(int)"},{"p":"one.util.streamex","c":"EntryStream","l":"grouping()"},{"p":"one.util.streamex","c":"EntryStream","l":"grouping(Collector<? super V, A, D>)","url":"grouping(java.util.stream.Collector)"},{"p":"one.util.streamex","c":"EntryStream","l":"grouping(Supplier<M>, Collector<? super V, A, D>)","url":"grouping(java.util.function.Supplier,java.util.stream.Collector)"},{"p":"one.util.streamex","c":"EntryStream","l":"grouping(Supplier<M>)","url":"grouping(java.util.function.Supplier)"},{"p":"one.util.streamex","c":"DoubleCollector","l":"groupingBy(DoubleFunction<? extends K>, DoubleCollector<A, D>)","url":"groupingBy(java.util.function.DoubleFunction,one.util.streamex.DoubleCollector)"},{"p":"one.util.streamex","c":"DoubleCollector","l":"groupingBy(DoubleFunction<? extends K>, Supplier<M>, DoubleCollector<A, D>)","url":"groupingBy(java.util.function.DoubleFunction,java.util.function.Supplier,one.util.streamex.DoubleCollector)"},{"p":"one.util.streamex","c":"DoubleCollector","l":"groupingBy(DoubleFunction<? extends K>)","url":"groupingBy(java.util.function.DoubleFunction)"},{"p":"one.util.streamex","c":"StreamEx","l":"groupingBy(Function<? super T, ? extends K>, Collector<? super T, ?, D>)","url":"groupingBy(java.util.function.Function,java.util.stream.Collector)"},{"p":"one.util.streamex","c":"MoreCollectors","l":"groupingBy(Function<? super T, ? extends K>, Set<K>, Collector<? super T, A, D>)","url":"groupingBy(java.util.function.Function,java.util.Set,java.util.stream.Collector)"},{"p":"one.util.streamex","c":"MoreCollectors","l":"groupingBy(Function<? super T, ? extends K>, Set<K>, Supplier<M>, Collector<? super T, A, D>)","url":"groupingBy(java.util.function.Function,java.util.Set,java.util.function.Supplier,java.util.stream.Collector)"},{"p":"one.util.streamex","c":"StreamEx","l":"groupingBy(Function<? super T, ? extends K>, Supplier<M>, Collector<? super T, ?, D>)","url":"groupingBy(java.util.function.Function,java.util.function.Supplier,java.util.stream.Collector)"},{"p":"one.util.streamex","c":"StreamEx","l":"groupingBy(Function<? super T, ? extends K>)","url":"groupingBy(java.util.function.Function)"},{"p":"one.util.streamex","c":"IntCollector","l":"groupingBy(IntFunction<? extends K>, IntCollector<A, D>)","url":"groupingBy(java.util.function.IntFunction,one.util.streamex.IntCollector)"},{"p":"one.util.streamex","c":"IntCollector","l":"groupingBy(IntFunction<? extends K>, Supplier<M>, IntCollector<A, D>)","url":"groupingBy(java.util.function.IntFunction,java.util.function.Supplier,one.util.streamex.IntCollector)"},{"p":"one.util.streamex","c":"IntCollector","l":"groupingBy(IntFunction<? extends K>)","url":"groupingBy(java.util.function.IntFunction)"},{"p":"one.util.streamex","c":"LongCollector","l":"groupingBy(LongFunction<? extends K>, LongCollector<A, D>)","url":"groupingBy(java.util.function.LongFunction,one.util.streamex.LongCollector)"},{"p":"one.util.streamex","c":"LongCollector","l":"groupingBy(LongFunction<? extends K>, Supplier<M>, LongCollector<A, D>)","url":"groupingBy(java.util.function.LongFunction,java.util.function.Supplier,one.util.streamex.LongCollector)"},{"p":"one.util.streamex","c":"LongCollector","l":"groupingBy(LongFunction<? extends K>)","url":"groupingBy(java.util.function.LongFunction)"},{"p":"one.util.streamex","c":"MoreCollectors","l":"groupingByEnum(Class<K>, Function<? super T, K>, Collector<? super T, A, D>)","url":"groupingByEnum(java.lang.Class,java.util.function.Function,java.util.stream.Collector)"},{"p":"one.util.streamex","c":"StreamEx","l":"groupingTo(Function<? super T, ? extends K>, Supplier<C>)","url":"groupingTo(java.util.function.Function,java.util.function.Supplier)"},{"p":"one.util.streamex","c":"StreamEx","l":"groupingTo(Function<? super T, ? extends K>, Supplier<M>, Supplier<C>)","url":"groupingTo(java.util.function.Function,java.util.function.Supplier,java.util.function.Supplier)"},{"p":"one.util.streamex","c":"EntryStream","l":"groupingTo(Supplier<C>)","url":"groupingTo(java.util.function.Supplier)"},{"p":"one.util.streamex","c":"EntryStream","l":"groupingTo(Supplier<M>, Supplier<C>)","url":"groupingTo(java.util.function.Supplier,java.util.function.Supplier)"},{"p":"one.util.streamex","c":"StreamEx","l":"groupRuns(BiPredicate<? super T, ? super T>)","url":"groupRuns(java.util.function.BiPredicate)"},{"p":"one.util.streamex","c":"IntStreamEx","l":"has(int)"},{"p":"one.util.streamex","c":"LongStreamEx","l":"has(long)"},{"p":"one.util.streamex","c":"StreamEx","l":"has(T)"},{"p":"one.util.streamex","c":"MoreCollectors","l":"head(int)"},{"p":"one.util.streamex","c":"StreamEx","l":"headTail(BiFunction<? super T, ? super StreamEx<T>, ? extends Stream<R>>, Supplier<? extends Stream<R>>)","url":"headTail(java.util.function.BiFunction,java.util.function.Supplier)"},{"p":"one.util.streamex","c":"StreamEx","l":"headTail(BiFunction<? super T, ? super StreamEx<T>, ? extends Stream<R>>)","url":"headTail(java.util.function.BiFunction)"},{"p":"one.util.streamex","c":"MoreCollectors","l":"ifAllMatch(Predicate<T>, Collector<T, A, R>)","url":"ifAllMatch(java.util.function.Predicate,java.util.stream.Collector)"},{"p":"one.util.streamex","c":"AbstractStreamEx","l":"ifEmpty(Stream<? extends T>)","url":"ifEmpty(java.util.stream.Stream)"},{"p":"one.util.streamex","c":"StreamEx","l":"ifEmpty(T...)"},{"p":"one.util.streamex","c":"DoubleStreamEx","l":"indexOf(DoublePredicate)","url":"indexOf(java.util.function.DoublePredicate)"},{"p":"one.util.streamex","c":"IntStreamEx","l":"indexOf(int)"},{"p":"one.util.streamex","c":"IntStreamEx","l":"indexOf(IntPredicate)","url":"indexOf(java.util.function.IntPredicate)"},{"p":"one.util.streamex","c":"LongStreamEx","l":"indexOf(long)"},{"p":"one.util.streamex","c":"LongStreamEx","l":"indexOf(LongPredicate)","url":"indexOf(java.util.function.LongPredicate)"},{"p":"one.util.streamex","c":"AbstractStreamEx","l":"indexOf(Predicate<? super T>)","url":"indexOf(java.util.function.Predicate)"},{"p":"one.util.streamex","c":"AbstractStreamEx","l":"indexOf(T)"},{"p":"one.util.streamex","c":"IntCollector","l":"intAccumulator()"},{"p":"one.util.streamex","c":"MoreCollectors","l":"intersecting()"},{"p":"one.util.streamex","c":"DoubleStreamEx","l":"intersperse(int)"},{"p":"one.util.streamex","c":"IntStreamEx","l":"intersperse(int)"},{"p":"one.util.streamex","c":"LongStreamEx","l":"intersperse(int)"},{"p":"one.util.streamex","c":"AbstractStreamEx","l":"intersperse(T)"},{"p":"one.util.streamex","c":"StreamEx","l":"intervalMap(BiPredicate<? super T, ? super T>, BiFunction<? super T, ? super T, ? extends U>)","url":"intervalMap(java.util.function.BiPredicate,java.util.function.BiFunction)"},{"p":"one.util.streamex","c":"StreamEx","l":"into(C)"},{"p":"one.util.streamex","c":"EntryStream","l":"into(M)"},{"p":"one.util.streamex","c":"IntStreamEx","l":"ints()"},{"p":"one.util.streamex","c":"EntryStream","l":"invert()"},{"p":"one.util.streamex","c":"DoubleStreamEx","l":"iterate(double, DoublePredicate, DoubleUnaryOperator)","url":"iterate(double,java.util.function.DoublePredicate,java.util.function.DoubleUnaryOperator)"},{"p":"one.util.streamex","c":"DoubleStreamEx","l":"iterate(double, DoubleUnaryOperator)","url":"iterate(double,java.util.function.DoubleUnaryOperator)"},{"p":"one.util.streamex","c":"IntStreamEx","l":"iterate(int, IntPredicate, IntUnaryOperator)","url":"iterate(int,java.util.function.IntPredicate,java.util.function.IntUnaryOperator)"},{"p":"one.util.streamex","c":"IntStreamEx","l":"iterate(int, IntUnaryOperator)","url":"iterate(int,java.util.function.IntUnaryOperator)"},{"p":"one.util.streamex","c":"LongStreamEx","l":"iterate(long, LongPredicate, LongUnaryOperator)","url":"iterate(long,java.util.function.LongPredicate,java.util.function.LongUnaryOperator)"},{"p":"one.util.streamex","c":"LongStreamEx","l":"iterate(long, LongUnaryOperator)","url":"iterate(long,java.util.function.LongUnaryOperator)"},{"p":"one.util.streamex","c":"StreamEx","l":"iterate(T, Predicate<? super T>, UnaryOperator<T>)","url":"iterate(T,java.util.function.Predicate,java.util.function.UnaryOperator)"},{"p":"one.util.streamex","c":"StreamEx","l":"iterate(T, UnaryOperator<T>)","url":"iterate(T,java.util.function.UnaryOperator)"},{"p":"one.util.streamex","c":"AbstractStreamEx","l":"iterator()"},{"p":"one.util.streamex","c":"DoubleStreamEx","l":"iterator()"},{"p":"one.util.streamex","c":"IntStreamEx","l":"iterator()"},{"p":"one.util.streamex","c":"LongStreamEx","l":"iterator()"},{"p":"one.util.streamex","c":"EntryStream","l":"join(CharSequence, CharSequence, CharSequence)","url":"join(java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence)"},{"p":"one.util.streamex","c":"EntryStream","l":"join(CharSequence)","url":"join(java.lang.CharSequence)"},{"p":"one.util.streamex","c":"StreamEx","l":"joining()"},{"p":"one.util.streamex","c":"DoubleCollector","l":"joining(CharSequence, CharSequence, CharSequence)","url":"joining(java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence)"},{"p":"one.util.streamex","c":"DoubleStreamEx","l":"joining(CharSequence, CharSequence, CharSequence)","url":"joining(java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence)"},{"p":"one.util.streamex","c":"IntCollector","l":"joining(CharSequence, CharSequence, CharSequence)","url":"joining(java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence)"},{"p":"one.util.streamex","c":"IntStreamEx","l":"joining(CharSequence, CharSequence, CharSequence)","url":"joining(java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence)"},{"p":"one.util.streamex","c":"LongCollector","l":"joining(CharSequence, CharSequence, CharSequence)","url":"joining(java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence)"},{"p":"one.util.streamex","c":"LongStreamEx","l":"joining(CharSequence, CharSequence, CharSequence)","url":"joining(java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence)"},{"p":"one.util.streamex","c":"StreamEx","l":"joining(CharSequence, CharSequence, CharSequence)","url":"joining(java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence)"},{"p":"one.util.streamex","c":"DoubleCollector","l":"joining(CharSequence)","url":"joining(java.lang.CharSequence)"},{"p":"one.util.streamex","c":"DoubleStreamEx","l":"joining(CharSequence)","url":"joining(java.lang.CharSequence)"},{"p":"one.util.streamex","c":"IntCollector","l":"joining(CharSequence)","url":"joining(java.lang.CharSequence)"},{"p":"one.util.streamex","c":"IntStreamEx","l":"joining(CharSequence)","url":"joining(java.lang.CharSequence)"},{"p":"one.util.streamex","c":"LongCollector","l":"joining(CharSequence)","url":"joining(java.lang.CharSequence)"},{"p":"one.util.streamex","c":"LongStreamEx","l":"joining(CharSequence)","url":"joining(java.lang.CharSequence)"},{"p":"one.util.streamex","c":"StreamEx","l":"joining(CharSequence)","url":"joining(java.lang.CharSequence)"},{"p":"one.util.streamex","c":"EntryStream","l":"keys()"},{"p":"one.util.streamex","c":"MoreCollectors","l":"last()"},{"p":"one.util.streamex","c":"MoreCollectors","l":"least(Comparator<? super T>, int)","url":"least(java.util.Comparator,int)"},{"p":"one.util.streamex","c":"MoreCollectors","l":"least(int)"},{"p":"one.util.streamex","c":"DoubleStreamEx","l":"less(double)"},{"p":"one.util.streamex","c":"IntStreamEx","l":"less(int)"},{"p":"one.util.streamex","c":"LongStreamEx","l":"less(long)"},{"p":"one.util.streamex","c":"AbstractStreamEx","l":"limit(long)"},{"p":"one.util.streamex","c":"DoubleStreamEx","l":"limit(long)"},{"p":"one.util.streamex","c":"IntStreamEx","l":"limit(long)"},{"p":"one.util.streamex","c":"LongStreamEx","l":"limit(long)"},{"p":"one.util.streamex","c":"LongCollector","l":"longAccumulator()"},{"p":"one.util.streamex","c":"LongStreamEx","l":"longs()"},{"p":"one.util.streamex","c":"DoubleStreamEx","l":"map(DoubleUnaryOperator)","url":"map(java.util.function.DoubleUnaryOperator)"},{"p":"one.util.streamex","c":"AbstractStreamEx","l":"map(Function<? super T, ? extends R>)","url":"map(java.util.function.Function)"},{"p":"one.util.streamex","c":"IntStreamEx","l":"map(IntUnaryOperator)","url":"map(java.util.function.IntUnaryOperator)"},{"p":"one.util.streamex","c":"LongStreamEx","l":"map(LongUnaryOperator)","url":"map(java.util.function.LongUnaryOperator)"},{"p":"one.util.streamex","c":"DoubleStreamEx","l":"mapFirst(DoubleUnaryOperator)","url":"mapFirst(java.util.function.DoubleUnaryOperator)"},{"p":"one.util.streamex","c":"StreamEx","l":"mapFirst(Function<? super T, ? extends T>)","url":"mapFirst(java.util.function.Function)"},{"p":"one.util.streamex","c":"IntStreamEx","l":"mapFirst(IntUnaryOperator)","url":"mapFirst(java.util.function.IntUnaryOperator)"},{"p":"one.util.streamex","c":"LongStreamEx","l":"mapFirst(LongUnaryOperator)","url":"mapFirst(java.util.function.LongUnaryOperator)"},{"p":"one.util.streamex","c":"StreamEx","l":"mapFirstOrElse(Function<? super T, ? extends R>, Function<? super T, ? extends R>)","url":"mapFirstOrElse(java.util.function.Function,java.util.function.Function)"},{"p":"one.util.streamex","c":"EntryStream","l":"mapKeys(Function<? super K, ? extends KK>)","url":"mapKeys(java.util.function.Function)"},{"p":"one.util.streamex","c":"EntryStream","l":"mapKeyValue(BiFunction<? super K, ? super V, ? extends R>)","url":"mapKeyValue(java.util.function.BiFunction)"},{"p":"one.util.streamex","c":"EntryStream","l":"mapKeyValuePartial(BiFunction<? super K, ? super V, ? extends Optional<? extends R>>)","url":"mapKeyValuePartial(java.util.function.BiFunction)"},{"p":"one.util.streamex","c":"DoubleStreamEx","l":"mapLast(DoubleUnaryOperator)","url":"mapLast(java.util.function.DoubleUnaryOperator)"},{"p":"one.util.streamex","c":"StreamEx","l":"mapLast(Function<? super T, ? extends T>)","url":"mapLast(java.util.function.Function)"},{"p":"one.util.streamex","c":"IntStreamEx","l":"mapLast(IntUnaryOperator)","url":"mapLast(java.util.function.IntUnaryOperator)"},{"p":"one.util.streamex","c":"LongStreamEx","l":"mapLast(LongUnaryOperator)","url":"mapLast(java.util.function.LongUnaryOperator)"},{"p":"one.util.streamex","c":"StreamEx","l":"mapLastOrElse(Function<? super T, ? extends R>, Function<? super T, ? extends R>)","url":"mapLastOrElse(java.util.function.Function,java.util.function.Function)"},{"p":"one.util.streamex","c":"AbstractStreamEx","l":"mapPartial(Function<? super T, ? extends Optional<? extends R>>)","url":"mapPartial(java.util.function.Function)"},{"p":"one.util.streamex","c":"DoubleCollector","l":"mapping(DoubleUnaryOperator, DoubleCollector<A, R>)","url":"mapping(java.util.function.DoubleUnaryOperator,one.util.streamex.DoubleCollector)"},{"p":"one.util.streamex","c":"MoreCollectors","l":"mapping(Function<? super T, ? extends U>, Collector<? super U, A, R>)","url":"mapping(java.util.function.Function,java.util.stream.Collector)"},{"p":"one.util.streamex","c":"MoreCollectors","l":"mapping(Function<? super T, ? extends U>)","url":"mapping(java.util.function.Function)"},{"p":"one.util.streamex","c":"IntCollector","l":"mapping(IntUnaryOperator, IntCollector<A, R>)","url":"mapping(java.util.function.IntUnaryOperator,one.util.streamex.IntCollector)"},{"p":"one.util.streamex","c":"LongCollector","l":"mapping(LongUnaryOperator, LongCollector<A, R>)","url":"mapping(java.util.function.LongUnaryOperator,one.util.streamex.LongCollector)"},{"p":"one.util.streamex","c":"DoubleCollector","l":"mappingToObj(DoubleFunction<U>, Collector<U, A, R>)","url":"mappingToObj(java.util.function.DoubleFunction,java.util.stream.Collector)"},{"p":"one.util.streamex","c":"IntCollector","l":"mappingToObj(IntFunction<U>, Collector<U, A, R>)","url":"mappingToObj(java.util.function.IntFunction,java.util.stream.Collector)"},{"p":"one.util.streamex","c":"LongCollector","l":"mappingToObj(LongFunction<U>, Collector<U, A, R>)","url":"mappingToObj(java.util.function.LongFunction,java.util.stream.Collector)"},{"p":"one.util.streamex","c":"IntStreamEx","l":"mapToDouble(IntToDoubleFunction)","url":"mapToDouble(java.util.function.IntToDoubleFunction)"},{"p":"one.util.streamex","c":"LongStreamEx","l":"mapToDouble(LongToDoubleFunction)","url":"mapToDouble(java.util.function.LongToDoubleFunction)"},{"p":"one.util.streamex","c":"AbstractStreamEx","l":"mapToDouble(ToDoubleFunction<? super T>)","url":"mapToDouble(java.util.function.ToDoubleFunction)"},{"p":"one.util.streamex","c":"DoubleStreamEx","l":"mapToEntry(DoubleFunction<? extends K>, DoubleFunction<? extends V>)","url":"mapToEntry(java.util.function.DoubleFunction,java.util.function.DoubleFunction)"},{"p":"one.util.streamex","c":"StreamEx","l":"mapToEntry(Function<? super T, ? extends K>, Function<? super T, ? extends V>)","url":"mapToEntry(java.util.function.Function,java.util.function.Function)"},{"p":"one.util.streamex","c":"StreamEx","l":"mapToEntry(Function<? super T, ? extends V>)","url":"mapToEntry(java.util.function.Function)"},{"p":"one.util.streamex","c":"IntStreamEx","l":"mapToEntry(IntFunction<? extends K>, IntFunction<? extends V>)","url":"mapToEntry(java.util.function.IntFunction,java.util.function.IntFunction)"},{"p":"one.util.streamex","c":"LongStreamEx","l":"mapToEntry(LongFunction<? extends K>, LongFunction<? extends V>)","url":"mapToEntry(java.util.function.LongFunction,java.util.function.LongFunction)"},{"p":"one.util.streamex","c":"DoubleStreamEx","l":"mapToInt(DoubleToIntFunction)","url":"mapToInt(java.util.function.DoubleToIntFunction)"},{"p":"one.util.streamex","c":"LongStreamEx","l":"mapToInt(LongToIntFunction)","url":"mapToInt(java.util.function.LongToIntFunction)"},{"p":"one.util.streamex","c":"AbstractStreamEx","l":"mapToInt(ToIntFunction<? super T>)","url":"mapToInt(java.util.function.ToIntFunction)"},{"p":"one.util.streamex","c":"EntryStream","l":"mapToKey(BiFunction<? super K, ? super V, ? extends KK>)","url":"mapToKey(java.util.function.BiFunction)"},{"p":"one.util.streamex","c":"EntryStream","l":"mapToKeyPartial(BiFunction<? super K, ? super V, ? extends Optional<? extends KK>>)","url":"mapToKeyPartial(java.util.function.BiFunction)"},{"p":"one.util.streamex","c":"DoubleStreamEx","l":"mapToLong(DoubleToLongFunction)","url":"mapToLong(java.util.function.DoubleToLongFunction)"},{"p":"one.util.streamex","c":"IntStreamEx","l":"mapToLong(IntToLongFunction)","url":"mapToLong(java.util.function.IntToLongFunction)"},{"p":"one.util.streamex","c":"AbstractStreamEx","l":"mapToLong(ToLongFunction<? super T>)","url":"mapToLong(java.util.function.ToLongFunction)"},{"p":"one.util.streamex","c":"DoubleStreamEx","l":"mapToObj(DoubleFunction<? extends U>)","url":"mapToObj(java.util.function.DoubleFunction)"},{"p":"one.util.streamex","c":"IntStreamEx","l":"mapToObj(IntFunction<? extends U>)","url":"mapToObj(java.util.function.IntFunction)"},{"p":"one.util.streamex","c":"LongStreamEx","l":"mapToObj(LongFunction<? extends U>)","url":"mapToObj(java.util.function.LongFunction)"},{"p":"one.util.streamex","c":"EntryStream","l":"mapToValue(BiFunction<? super K, ? super V, ? extends VV>)","url":"mapToValue(java.util.function.BiFunction)"},{"p":"one.util.streamex","c":"EntryStream","l":"mapToValuePartial(BiFunction<? super K, ? super V, ? extends Optional<? extends VV>>)","url":"mapToValuePartial(java.util.function.BiFunction)"},{"p":"one.util.streamex","c":"EntryStream","l":"mapValues(Function<? super V, ? extends VV>)","url":"mapValues(java.util.function.Function)"},{"p":"one.util.streamex","c":"DoubleCollector","l":"max()"},{"p":"one.util.streamex","c":"DoubleStreamEx","l":"max()"},{"p":"one.util.streamex","c":"IntCollector","l":"max()"},{"p":"one.util.streamex","c":"IntStreamEx","l":"max()"},{"p":"one.util.streamex","c":"LongCollector","l":"max()"},{"p":"one.util.streamex","c":"LongStreamEx","l":"max()"},{"p":"one.util.streamex","c":"AbstractStreamEx","l":"max(Comparator<? super T>)","url":"max(java.util.Comparator)"},{"p":"one.util.streamex","c":"DoubleStreamEx","l":"max(Comparator<Double>)","url":"max(java.util.Comparator)"},{"p":"one.util.streamex","c":"IntStreamEx","l":"max(Comparator<Integer>)","url":"max(java.util.Comparator)"},{"p":"one.util.streamex","c":"LongStreamEx","l":"max(Comparator<Long>)","url":"max(java.util.Comparator)"},{"p":"one.util.streamex","c":"MoreCollectors","l":"maxAll()"},{"p":"one.util.streamex","c":"MoreCollectors","l":"maxAll(Collector<T, A, D>)","url":"maxAll(java.util.stream.Collector)"},{"p":"one.util.streamex","c":"MoreCollectors","l":"maxAll(Comparator<? super T>, Collector<? super T, A, D>)","url":"maxAll(java.util.Comparator,java.util.stream.Collector)"},{"p":"one.util.streamex","c":"MoreCollectors","l":"maxAll(Comparator<? super T>)","url":"maxAll(java.util.Comparator)"},{"p":"one.util.streamex","c":"DoubleStreamEx","l":"maxBy(DoubleFunction<V>)","url":"maxBy(java.util.function.DoubleFunction)"},{"p":"one.util.streamex","c":"AbstractStreamEx","l":"maxBy(Function<? super T, ? extends V>)","url":"maxBy(java.util.function.Function)"},{"p":"one.util.streamex","c":"IntStreamEx","l":"maxBy(IntFunction<V>)","url":"maxBy(java.util.function.IntFunction)"},{"p":"one.util.streamex","c":"LongStreamEx","l":"maxBy(LongFunction<V>)","url":"maxBy(java.util.function.LongFunction)"},{"p":"one.util.streamex","c":"DoubleStreamEx","l":"maxByDouble(DoubleUnaryOperator)","url":"maxByDouble(java.util.function.DoubleUnaryOperator)"},{"p":"one.util.streamex","c":"IntStreamEx","l":"maxByDouble(IntToDoubleFunction)","url":"maxByDouble(java.util.function.IntToDoubleFunction)"},{"p":"one.util.streamex","c":"LongStreamEx","l":"maxByDouble(LongToDoubleFunction)","url":"maxByDouble(java.util.function.LongToDoubleFunction)"},{"p":"one.util.streamex","c":"AbstractStreamEx","l":"maxByDouble(ToDoubleFunction<? super T>)","url":"maxByDouble(java.util.function.ToDoubleFunction)"},{"p":"one.util.streamex","c":"DoubleStreamEx","l":"maxByInt(DoubleToIntFunction)","url":"maxByInt(java.util.function.DoubleToIntFunction)"},{"p":"one.util.streamex","c":"IntStreamEx","l":"maxByInt(IntUnaryOperator)","url":"maxByInt(java.util.function.IntUnaryOperator)"},{"p":"one.util.streamex","c":"LongStreamEx","l":"maxByInt(LongToIntFunction)","url":"maxByInt(java.util.function.LongToIntFunction)"},{"p":"one.util.streamex","c":"AbstractStreamEx","l":"maxByInt(ToIntFunction<? super T>)","url":"maxByInt(java.util.function.ToIntFunction)"},{"p":"one.util.streamex","c":"DoubleStreamEx","l":"maxByLong(DoubleToLongFunction)","url":"maxByLong(java.util.function.DoubleToLongFunction)"},{"p":"one.util.streamex","c":"IntStreamEx","l":"maxByLong(IntToLongFunction)","url":"maxByLong(java.util.function.IntToLongFunction)"},{"p":"one.util.streamex","c":"LongStreamEx","l":"maxByLong(LongUnaryOperator)","url":"maxByLong(java.util.function.LongUnaryOperator)"},{"p":"one.util.streamex","c":"AbstractStreamEx","l":"maxByLong(ToLongFunction<? super T>)","url":"maxByLong(java.util.function.ToLongFunction)"},{"p":"one.util.streamex","c":"Joining","l":"maxChars(int)"},{"p":"one.util.streamex","c":"Joining","l":"maxCodePoints(int)"},{"p":"one.util.streamex","c":"Joining","l":"maxElements(int)"},{"p":"one.util.streamex","c":"Joining","l":"maxGraphemes(int)"},{"p":"one.util.streamex","c":"MoreCollectors","l":"maxIndex()"},{"p":"one.util.streamex","c":"MoreCollectors","l":"maxIndex(Comparator<? super T>)","url":"maxIndex(java.util.Comparator)"},{"p":"one.util.streamex","c":"DoubleCollector","l":"min()"},{"p":"one.util.streamex","c":"DoubleStreamEx","l":"min()"},{"p":"one.util.streamex","c":"IntCollector","l":"min()"},{"p":"one.util.streamex","c":"IntStreamEx","l":"min()"},{"p":"one.util.streamex","c":"LongCollector","l":"min()"},{"p":"one.util.streamex","c":"LongStreamEx","l":"min()"},{"p":"one.util.streamex","c":"AbstractStreamEx","l":"min(Comparator<? super T>)","url":"min(java.util.Comparator)"},{"p":"one.util.streamex","c":"DoubleStreamEx","l":"min(Comparator<Double>)","url":"min(java.util.Comparator)"},{"p":"one.util.streamex","c":"IntStreamEx","l":"min(Comparator<Integer>)","url":"min(java.util.Comparator)"},{"p":"one.util.streamex","c":"LongStreamEx","l":"min(Comparator<Long>)","url":"min(java.util.Comparator)"},{"p":"one.util.streamex","c":"MoreCollectors","l":"minAll()"},{"p":"one.util.streamex","c":"MoreCollectors","l":"minAll(Collector<T, A, D>)","url":"minAll(java.util.stream.Collector)"},{"p":"one.util.streamex","c":"MoreCollectors","l":"minAll(Comparator<? super T>, Collector<T, A, D>)","url":"minAll(java.util.Comparator,java.util.stream.Collector)"},{"p":"one.util.streamex","c":"MoreCollectors","l":"minAll(Comparator<? super T>)","url":"minAll(java.util.Comparator)"},{"p":"one.util.streamex","c":"DoubleStreamEx","l":"minBy(DoubleFunction<V>)","url":"minBy(java.util.function.DoubleFunction)"},{"p":"one.util.streamex","c":"AbstractStreamEx","l":"minBy(Function<? super T, ? extends V>)","url":"minBy(java.util.function.Function)"},{"p":"one.util.streamex","c":"IntStreamEx","l":"minBy(IntFunction<V>)","url":"minBy(java.util.function.IntFunction)"},{"p":"one.util.streamex","c":"LongStreamEx","l":"minBy(LongFunction<V>)","url":"minBy(java.util.function.LongFunction)"},{"p":"one.util.streamex","c":"DoubleStreamEx","l":"minByDouble(DoubleUnaryOperator)","url":"minByDouble(java.util.function.DoubleUnaryOperator)"},{"p":"one.util.streamex","c":"IntStreamEx","l":"minByDouble(IntToDoubleFunction)","url":"minByDouble(java.util.function.IntToDoubleFunction)"},{"p":"one.util.streamex","c":"LongStreamEx","l":"minByDouble(LongToDoubleFunction)","url":"minByDouble(java.util.function.LongToDoubleFunction)"},{"p":"one.util.streamex","c":"AbstractStreamEx","l":"minByDouble(ToDoubleFunction<? super T>)","url":"minByDouble(java.util.function.ToDoubleFunction)"},{"p":"one.util.streamex","c":"DoubleStreamEx","l":"minByInt(DoubleToIntFunction)","url":"minByInt(java.util.function.DoubleToIntFunction)"},{"p":"one.util.streamex","c":"IntStreamEx","l":"minByInt(IntUnaryOperator)","url":"minByInt(java.util.function.IntUnaryOperator)"},{"p":"one.util.streamex","c":"LongStreamEx","l":"minByInt(LongToIntFunction)","url":"minByInt(java.util.function.LongToIntFunction)"},{"p":"one.util.streamex","c":"AbstractStreamEx","l":"minByInt(ToIntFunction<? super T>)","url":"minByInt(java.util.function.ToIntFunction)"},{"p":"one.util.streamex","c":"DoubleStreamEx","l":"minByLong(DoubleToLongFunction)","url":"minByLong(java.util.function.DoubleToLongFunction)"},{"p":"one.util.streamex","c":"IntStreamEx","l":"minByLong(IntToLongFunction)","url":"minByLong(java.util.function.IntToLongFunction)"},{"p":"one.util.streamex","c":"LongStreamEx","l":"minByLong(LongUnaryOperator)","url":"minByLong(java.util.function.LongUnaryOperator)"},{"p":"one.util.streamex","c":"AbstractStreamEx","l":"minByLong(ToLongFunction<? super T>)","url":"minByLong(java.util.function.ToLongFunction)"},{"p":"one.util.streamex","c":"MoreCollectors","l":"minIndex()"},{"p":"one.util.streamex","c":"MoreCollectors","l":"minIndex(Comparator<? super T>)","url":"minIndex(java.util.Comparator)"},{"p":"one.util.streamex","c":"MoreCollectors","l":"minMax(Comparator<? super T>, BiFunction<? super T, ? super T, ? extends R>)","url":"minMax(java.util.Comparator,java.util.function.BiFunction)"},{"p":"one.util.streamex","c":"StreamEx.Emitter","l":"next(Consumer<? super T>)","url":"next(java.util.function.Consumer)"},{"p":"one.util.streamex","c":"DoubleStreamEx.DoubleEmitter","l":"next(DoubleConsumer)","url":"next(java.util.function.DoubleConsumer)"},{"p":"one.util.streamex","c":"IntStreamEx.IntEmitter","l":"next(IntConsumer)","url":"next(java.util.function.IntConsumer)"},{"p":"one.util.streamex","c":"LongStreamEx.LongEmitter","l":"next(LongConsumer)","url":"next(java.util.function.LongConsumer)"},{"p":"one.util.streamex","c":"EntryStream","l":"noneMatch(BiPredicate<? super K, ? super V>)","url":"noneMatch(java.util.function.BiPredicate)"},{"p":"one.util.streamex","c":"DoubleStreamEx","l":"noneMatch(DoublePredicate)","url":"noneMatch(java.util.function.DoublePredicate)"},{"p":"one.util.streamex","c":"IntStreamEx","l":"noneMatch(IntPredicate)","url":"noneMatch(java.util.function.IntPredicate)"},{"p":"one.util.streamex","c":"LongStreamEx","l":"noneMatch(LongPredicate)","url":"noneMatch(java.util.function.LongPredicate)"},{"p":"one.util.streamex","c":"AbstractStreamEx","l":"noneMatch(Predicate<? super T>)","url":"noneMatch(java.util.function.Predicate)"},{"p":"one.util.streamex","c":"AbstractStreamEx","l":"nonNull()"},{"p":"one.util.streamex","c":"StreamEx","l":"nonNull()"},{"p":"one.util.streamex","c":"EntryStream","l":"nonNullKeys()"},{"p":"one.util.streamex","c":"EntryStream","l":"nonNullValues()"},{"p":"one.util.streamex","c":"IntStreamEx","l":"of(BitSet)","url":"of(java.util.BitSet)"},{"p":"one.util.streamex","c":"IntStreamEx","l":"of(byte...)"},{"p":"one.util.streamex","c":"IntStreamEx","l":"of(byte[], int, int)","url":"of(byte[],int,int)"},{"p":"one.util.streamex","c":"IntStreamEx","l":"of(char...)"},{"p":"one.util.streamex","c":"IntStreamEx","l":"of(char[], int, int)","url":"of(char[],int,int)"},{"p":"one.util.streamex","c":"StreamEx","l":"of(Collection<? extends T>)","url":"of(java.util.Collection)"},{"p":"one.util.streamex","c":"DoubleStreamEx","l":"of(Collection<Double>)","url":"of(java.util.Collection)"},{"p":"one.util.streamex","c":"IntStreamEx","l":"of(Collection<Integer>)","url":"of(java.util.Collection)"},{"p":"one.util.streamex","c":"LongStreamEx","l":"of(Collection<Long>)","url":"of(java.util.Collection)"},{"p":"one.util.streamex","c":"DoubleCollector","l":"of(Collector<Double, A, R>)","url":"of(java.util.stream.Collector)"},{"p":"one.util.streamex","c":"IntCollector","l":"of(Collector<Integer, A, R>)","url":"of(java.util.stream.Collector)"},{"p":"one.util.streamex","c":"LongCollector","l":"of(Collector<Long, A, R>)","url":"of(java.util.stream.Collector)"},{"p":"one.util.streamex","c":"DoubleStreamEx","l":"of(double...)"},{"p":"one.util.streamex","c":"DoubleStreamEx","l":"of(double)"},{"p":"one.util.streamex","c":"DoubleStreamEx","l":"of(double[], int, int)","url":"of(double[],int,int)"},{"p":"one.util.streamex","c":"DoubleStreamEx","l":"of(Double[])","url":"of(java.lang.Double[])"},{"p":"one.util.streamex","c":"DoubleStreamEx","l":"of(DoubleBuffer)","url":"of(java.nio.DoubleBuffer)"},{"p":"one.util.streamex","c":"DoubleStreamEx","l":"of(DoubleStream)","url":"of(java.util.stream.DoubleStream)"},{"p":"one.util.streamex","c":"StreamEx","l":"of(Enumeration<? extends T>)","url":"of(java.util.Enumeration)"},{"p":"one.util.streamex","c":"DoubleStreamEx","l":"of(float...)"},{"p":"one.util.streamex","c":"DoubleStreamEx","l":"of(float[], int, int)","url":"of(float[],int,int)"},{"p":"one.util.streamex","c":"IntStreamEx","l":"of(InputStream)","url":"of(java.io.InputStream)"},{"p":"one.util.streamex","c":"IntStreamEx","l":"of(int...)"},{"p":"one.util.streamex","c":"IntStreamEx","l":"of(int)"},{"p":"one.util.streamex","c":"IntStreamEx","l":"of(int[], int, int)","url":"of(int[],int,int)"},{"p":"one.util.streamex","c":"IntStreamEx","l":"of(IntBuffer)","url":"of(java.nio.IntBuffer)"},{"p":"one.util.streamex","c":"IntStreamEx","l":"of(Integer[])","url":"of(java.lang.Integer[])"},{"p":"one.util.streamex","c":"IntStreamEx","l":"of(IntStream)","url":"of(java.util.stream.IntStream)"},{"p":"one.util.streamex","c":"EntryStream","l":"of(Iterator<? extends Map.Entry<K, V>>)","url":"of(java.util.Iterator)"},{"p":"one.util.streamex","c":"StreamEx","l":"of(Iterator<? extends T>)","url":"of(java.util.Iterator)"},{"p":"one.util.streamex","c":"EntryStream","l":"of(K, V, K, V, K, V, K, V, K, V, K, V, K, V, K, V, K, V, K, V)","url":"of(K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V)"},{"p":"one.util.streamex","c":"EntryStream","l":"of(K, V, K, V, K, V, K, V, K, V, K, V, K, V, K, V, K, V)","url":"of(K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V)"},{"p":"one.util.streamex","c":"EntryStream","l":"of(K, V, K, V, K, V, K, V, K, V, K, V, K, V, K, V)","url":"of(K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V)"},{"p":"one.util.streamex","c":"EntryStream","l":"of(K, V, K, V, K, V, K, V, K, V, K, V, K, V)","url":"of(K,V,K,V,K,V,K,V,K,V,K,V,K,V)"},{"p":"one.util.streamex","c":"EntryStream","l":"of(K, V, K, V, K, V, K, V, K, V, K, V)","url":"of(K,V,K,V,K,V,K,V,K,V,K,V)"},{"p":"one.util.streamex","c":"EntryStream","l":"of(K, V, K, V, K, V, K, V, K, V)","url":"of(K,V,K,V,K,V,K,V,K,V)"},{"p":"one.util.streamex","c":"EntryStream","l":"of(K, V, K, V, K, V, K, V)","url":"of(K,V,K,V,K,V,K,V)"},{"p":"one.util.streamex","c":"EntryStream","l":"of(K, V, K, V, K, V)","url":"of(K,V,K,V,K,V)"},{"p":"one.util.streamex","c":"EntryStream","l":"of(K, V, K, V)","url":"of(K,V,K,V)"},{"p":"one.util.streamex","c":"EntryStream","l":"of(K, V)","url":"of(K,V)"},{"p":"one.util.streamex","c":"EntryStream","l":"of(List<V>)","url":"of(java.util.List)"},{"p":"one.util.streamex","c":"LongStreamEx","l":"of(long...)"},{"p":"one.util.streamex","c":"LongStreamEx","l":"of(long)"},{"p":"one.util.streamex","c":"LongStreamEx","l":"of(long[], int, int)","url":"of(long[],int,int)"},{"p":"one.util.streamex","c":"LongStreamEx","l":"of(Long[])","url":"of(java.lang.Long[])"},{"p":"one.util.streamex","c":"LongStreamEx","l":"of(LongBuffer)","url":"of(java.nio.LongBuffer)"},{"p":"one.util.streamex","c":"LongStreamEx","l":"of(LongStream)","url":"of(java.util.stream.LongStream)"},{"p":"one.util.streamex","c":"EntryStream","l":"of(Map<K, V>)","url":"of(java.util.Map)"},{"p":"one.util.streamex","c":"StreamEx","l":"of(Optional<? extends T>)","url":"of(java.util.Optional)"},{"p":"one.util.streamex","c":"DoubleStreamEx","l":"of(OptionalDouble)","url":"of(java.util.OptionalDouble)"},{"p":"one.util.streamex","c":"IntStreamEx","l":"of(OptionalInt)","url":"of(java.util.OptionalInt)"},{"p":"one.util.streamex","c":"LongStreamEx","l":"of(OptionalLong)","url":"of(java.util.OptionalLong)"},{"p":"one.util.streamex","c":"DoubleStreamEx","l":"of(PrimitiveIterator.OfDouble)","url":"of(java.util.PrimitiveIterator.OfDouble)"},{"p":"one.util.streamex","c":"IntStreamEx","l":"of(PrimitiveIterator.OfInt)","url":"of(java.util.PrimitiveIterator.OfInt)"},{"p":"one.util.streamex","c":"LongStreamEx","l":"of(PrimitiveIterator.OfLong)","url":"of(java.util.PrimitiveIterator.OfLong)"},{"p":"one.util.streamex","c":"DoubleStreamEx","l":"of(Random, double, double)","url":"of(java.util.Random,double,double)"},{"p":"one.util.streamex","c":"IntStreamEx","l":"of(Random, int, int)","url":"of(java.util.Random,int,int)"},{"p":"one.util.streamex","c":"DoubleStreamEx","l":"of(Random, long, double, double)","url":"of(java.util.Random,long,double,double)"},{"p":"one.util.streamex","c":"IntStreamEx","l":"of(Random, long, int, int)","url":"of(java.util.Random,long,int,int)"},{"p":"one.util.streamex","c":"LongStreamEx","l":"of(Random, long, long, long)","url":"of(java.util.Random,long,long,long)"},{"p":"one.util.streamex","c":"LongStreamEx","l":"of(Random, long, long)","url":"of(java.util.Random,long,long)"},{"p":"one.util.streamex","c":"DoubleStreamEx","l":"of(Random, long)","url":"of(java.util.Random,long)"},{"p":"one.util.streamex","c":"IntStreamEx","l":"of(Random, long)","url":"of(java.util.Random,long)"},{"p":"one.util.streamex","c":"LongStreamEx","l":"of(Random, long)","url":"of(java.util.Random,long)"},{"p":"one.util.streamex","c":"DoubleStreamEx","l":"of(Random)","url":"of(java.util.Random)"},{"p":"one.util.streamex","c":"IntStreamEx","l":"of(Random)","url":"of(java.util.Random)"},{"p":"one.util.streamex","c":"LongStreamEx","l":"of(Random)","url":"of(java.util.Random)"},{"p":"one.util.streamex","c":"IntStreamEx","l":"of(short...)"},{"p":"one.util.streamex","c":"IntStreamEx","l":"of(short[], int, int)","url":"of(short[],int,int)"},{"p":"one.util.streamex","c":"DoubleStreamEx","l":"of(Spliterator.OfDouble)","url":"of(java.util.Spliterator.OfDouble)"},{"p":"one.util.streamex","c":"IntStreamEx","l":"of(Spliterator.OfInt)","url":"of(java.util.Spliterator.OfInt)"},{"p":"one.util.streamex","c":"LongStreamEx","l":"of(Spliterator.OfLong)","url":"of(java.util.Spliterator.OfLong)"},{"p":"one.util.streamex","c":"EntryStream","l":"of(Spliterator<? extends Map.Entry<K, V>>)","url":"of(java.util.Spliterator)"},{"p":"one.util.streamex","c":"StreamEx","l":"of(Spliterator<? extends T>)","url":"of(java.util.Spliterator)"},{"p":"one.util.streamex","c":"EntryStream","l":"of(Stream<? extends Map.Entry<K, V>>)","url":"of(java.util.stream.Stream)"},{"p":"one.util.streamex","c":"StreamEx","l":"of(Stream<T>)","url":"of(java.util.stream.Stream)"},{"p":"one.util.streamex","c":"DoubleCollector","l":"of(Supplier<A>, ObjDoubleConsumer<A>, BiConsumer<A, A>, Function<A, R>)","url":"of(java.util.function.Supplier,java.util.function.ObjDoubleConsumer,java.util.function.BiConsumer,java.util.function.Function)"},{"p":"one.util.streamex","c":"IntCollector","l":"of(Supplier<A>, ObjIntConsumer<A>, BiConsumer<A, A>, Function<A, R>)","url":"of(java.util.function.Supplier,java.util.function.ObjIntConsumer,java.util.function.BiConsumer,java.util.function.Function)"},{"p":"one.util.streamex","c":"LongCollector","l":"of(Supplier<A>, ObjLongConsumer<A>, BiConsumer<A, A>, Function<A, R>)","url":"of(java.util.function.Supplier,java.util.function.ObjLongConsumer,java.util.function.BiConsumer,java.util.function.Function)"},{"p":"one.util.streamex","c":"DoubleCollector","l":"of(Supplier<R>, ObjDoubleConsumer<R>, BiConsumer<R, R>)","url":"of(java.util.function.Supplier,java.util.function.ObjDoubleConsumer,java.util.function.BiConsumer)"},{"p":"one.util.streamex","c":"IntCollector","l":"of(Supplier<R>, ObjIntConsumer<R>, BiConsumer<R, R>)","url":"of(java.util.function.Supplier,java.util.function.ObjIntConsumer,java.util.function.BiConsumer)"},{"p":"one.util.streamex","c":"LongCollector","l":"of(Supplier<R>, ObjLongConsumer<R>, BiConsumer<R, R>)","url":"of(java.util.function.Supplier,java.util.function.ObjLongConsumer,java.util.function.BiConsumer)"},{"p":"one.util.streamex","c":"StreamEx","l":"of(T...)"},{"p":"one.util.streamex","c":"StreamEx","l":"of(T)"},{"p":"one.util.streamex","c":"StreamEx","l":"of(T[], int, int)","url":"of(T[],int,int)"},{"p":"one.util.streamex","c":"EntryStream","l":"of(V[])"},{"p":"one.util.streamex","c":"IntStreamEx","l":"ofChars(CharSequence)","url":"ofChars(java.lang.CharSequence)"},{"p":"one.util.streamex","c":"IntStreamEx","l":"ofCodePoints(CharSequence)","url":"ofCodePoints(java.lang.CharSequence)"},{"p":"one.util.streamex","c":"StreamEx","l":"ofCombinations(int, int)","url":"ofCombinations(int,int)"},{"p":"one.util.streamex","c":"IntStreamEx","l":"ofIndices(double[], DoublePredicate)","url":"ofIndices(double[],java.util.function.DoublePredicate)"},{"p":"one.util.streamex","c":"IntStreamEx","l":"ofIndices(double[])"},{"p":"one.util.streamex","c":"IntStreamEx","l":"ofIndices(int[], IntPredicate)","url":"ofIndices(int[],java.util.function.IntPredicate)"},{"p":"one.util.streamex","c":"IntStreamEx","l":"ofIndices(int[])"},{"p":"one.util.streamex","c":"IntStreamEx","l":"ofIndices(List<T>, Predicate<T>)","url":"ofIndices(java.util.List,java.util.function.Predicate)"},{"p":"one.util.streamex","c":"IntStreamEx","l":"ofIndices(List<T>)","url":"ofIndices(java.util.List)"},{"p":"one.util.streamex","c":"IntStreamEx","l":"ofIndices(long[], LongPredicate)","url":"ofIndices(long[],java.util.function.LongPredicate)"},{"p":"one.util.streamex","c":"IntStreamEx","l":"ofIndices(long[])"},{"p":"one.util.streamex","c":"IntStreamEx","l":"ofIndices(T[], Predicate<T>)","url":"ofIndices(T[],java.util.function.Predicate)"},{"p":"one.util.streamex","c":"IntStreamEx","l":"ofIndices(T[])"},{"p":"one.util.streamex","c":"StreamEx","l":"ofKeys(Map<T, ?>)","url":"ofKeys(java.util.Map)"},{"p":"one.util.streamex","c":"StreamEx","l":"ofKeys(Map<T, V>, Predicate<? super V>)","url":"ofKeys(java.util.Map,java.util.function.Predicate)"},{"p":"one.util.streamex","c":"StreamEx","l":"ofLines(BufferedReader)","url":"ofLines(java.io.BufferedReader)"},{"p":"one.util.streamex","c":"StreamEx","l":"ofLines(Path, Charset)","url":"ofLines(java.nio.file.Path,java.nio.charset.Charset)"},{"p":"one.util.streamex","c":"StreamEx","l":"ofLines(Path)","url":"ofLines(java.nio.file.Path)"},{"p":"one.util.streamex","c":"StreamEx","l":"ofLines(Reader)","url":"ofLines(java.io.Reader)"},{"p":"one.util.streamex","c":"StreamEx","l":"ofNullable(T)"},{"p":"one.util.streamex","c":"EntryStream","l":"ofPairs(List<T>)","url":"ofPairs(java.util.List)"},{"p":"one.util.streamex","c":"StreamEx","l":"ofPairs(List<U>, BiFunction<? super U, ? super U, ? extends T>)","url":"ofPairs(java.util.List,java.util.function.BiFunction)"},{"p":"one.util.streamex","c":"EntryStream","l":"ofPairs(T[])"},{"p":"one.util.streamex","c":"StreamEx","l":"ofPairs(U[], BiFunction<? super U, ? super U, ? extends T>)","url":"ofPairs(U[],java.util.function.BiFunction)"},{"p":"one.util.streamex","c":"StreamEx","l":"ofPermutations(int)"},{"p":"one.util.streamex","c":"StreamEx","l":"ofReversed(List<? extends T>)","url":"ofReversed(java.util.List)"},{"p":"one.util.streamex","c":"StreamEx","l":"ofReversed(T[])"},{"p":"one.util.streamex","c":"StreamEx","l":"ofSubLists(List<T>, int, int)","url":"ofSubLists(java.util.List,int,int)"},{"p":"one.util.streamex","c":"StreamEx","l":"ofSubLists(List<T>, int)","url":"ofSubLists(java.util.List,int)"},{"p":"one.util.streamex","c":"EntryStream","l":"ofTree(T, BiFunction<Integer, T, Stream<T>>)","url":"ofTree(T,java.util.function.BiFunction)"},{"p":"one.util.streamex","c":"EntryStream","l":"ofTree(T, Class<TT>, BiFunction<Integer, TT, Stream<T>>)","url":"ofTree(T,java.lang.Class,java.util.function.BiFunction)"},{"p":"one.util.streamex","c":"StreamEx","l":"ofTree(T, Class<TT>, Function<TT, Stream<T>>)","url":"ofTree(T,java.lang.Class,java.util.function.Function)"},{"p":"one.util.streamex","c":"StreamEx","l":"ofTree(T, Function<T, Stream<T>>)","url":"ofTree(T,java.util.function.Function)"},{"p":"one.util.streamex","c":"StreamEx","l":"ofValues(Map<?, T>)","url":"ofValues(java.util.Map)"},{"p":"one.util.streamex","c":"StreamEx","l":"ofValues(Map<K, T>, Predicate<? super K>)","url":"ofValues(java.util.Map,java.util.function.Predicate)"},{"p":"one.util.streamex","c":"AbstractStreamEx","l":"onClose(Runnable)","url":"onClose(java.lang.Runnable)"},{"p":"one.util.streamex","c":"DoubleStreamEx","l":"onClose(Runnable)","url":"onClose(java.lang.Runnable)"},{"p":"one.util.streamex","c":"IntStreamEx","l":"onClose(Runnable)","url":"onClose(java.lang.Runnable)"},{"p":"one.util.streamex","c":"LongStreamEx","l":"onClose(Runnable)","url":"onClose(java.lang.Runnable)"},{"p":"one.util.streamex","c":"MoreCollectors","l":"onlyOne()"},{"p":"one.util.streamex","c":"MoreCollectors","l":"onlyOne(Predicate<? super T>)","url":"onlyOne(java.util.function.Predicate)"},{"p":"one.util.streamex","c":"MoreCollectors","l":"pairing(Collector<? super T, A1, R1>, Collector<? super T, A2, R2>, BiFunction<? super R1, ? super R2, ? extends R>)","url":"pairing(java.util.stream.Collector,java.util.stream.Collector,java.util.function.BiFunction)"},{"p":"one.util.streamex","c":"StreamEx","l":"pairMap(BiFunction<? super T, ? super T, ? extends R>)","url":"pairMap(java.util.function.BiFunction)"},{"p":"one.util.streamex","c":"DoubleStreamEx","l":"pairMap(DoubleBinaryOperator)","url":"pairMap(java.util.function.DoubleBinaryOperator)"},{"p":"one.util.streamex","c":"IntStreamEx","l":"pairMap(IntBinaryOperator)","url":"pairMap(java.util.function.IntBinaryOperator)"},{"p":"one.util.streamex","c":"LongStreamEx","l":"pairMap(LongBinaryOperator)","url":"pairMap(java.util.function.LongBinaryOperator)"},{"p":"one.util.streamex","c":"AbstractStreamEx","l":"parallel()"},{"p":"one.util.streamex","c":"DoubleStreamEx","l":"parallel()"},{"p":"one.util.streamex","c":"IntStreamEx","l":"parallel()"},{"p":"one.util.streamex","c":"LongStreamEx","l":"parallel()"},{"p":"one.util.streamex","c":"AbstractStreamEx","l":"parallel(ForkJoinPool)","url":"parallel(java.util.concurrent.ForkJoinPool)"},{"p":"one.util.streamex","c":"DoubleStreamEx","l":"parallel(ForkJoinPool)","url":"parallel(java.util.concurrent.ForkJoinPool)"},{"p":"one.util.streamex","c":"IntStreamEx","l":"parallel(ForkJoinPool)","url":"parallel(java.util.concurrent.ForkJoinPool)"},{"p":"one.util.streamex","c":"LongStreamEx","l":"parallel(ForkJoinPool)","url":"parallel(java.util.concurrent.ForkJoinPool)"},{"p":"one.util.streamex","c":"DoubleCollector","l":"partitioningBy(DoublePredicate, DoubleCollector<A, D>)","url":"partitioningBy(java.util.function.DoublePredicate,one.util.streamex.DoubleCollector)"},{"p":"one.util.streamex","c":"DoubleCollector","l":"partitioningBy(DoublePredicate)","url":"partitioningBy(java.util.function.DoublePredicate)"},{"p":"one.util.streamex","c":"IntCollector","l":"partitioningBy(IntPredicate, IntCollector<A, D>)","url":"partitioningBy(java.util.function.IntPredicate,one.util.streamex.IntCollector)"},{"p":"one.util.streamex","c":"IntCollector","l":"partitioningBy(IntPredicate)","url":"partitioningBy(java.util.function.IntPredicate)"},{"p":"one.util.streamex","c":"LongCollector","l":"partitioningBy(LongPredicate, LongCollector<A, D>)","url":"partitioningBy(java.util.function.LongPredicate,one.util.streamex.LongCollector)"},{"p":"one.util.streamex","c":"LongCollector","l":"partitioningBy(LongPredicate)","url":"partitioningBy(java.util.function.LongPredicate)"},{"p":"one.util.streamex","c":"StreamEx","l":"partitioningBy(Predicate<? super T>, Collector<? super T, ?, D>)","url":"partitioningBy(java.util.function.Predicate,java.util.stream.Collector)"},{"p":"one.util.streamex","c":"MoreCollectors","l":"partitioningBy(Predicate<? super T>, Collector<? super T, A, D>)","url":"partitioningBy(java.util.function.Predicate,java.util.stream.Collector)"},{"p":"one.util.streamex","c":"StreamEx","l":"partitioningBy(Predicate<? super T>)","url":"partitioningBy(java.util.function.Predicate)"},{"p":"one.util.streamex","c":"StreamEx","l":"partitioningTo(Predicate<? super T>, Supplier<C>)","url":"partitioningTo(java.util.function.Predicate,java.util.function.Supplier)"},{"p":"one.util.streamex","c":"AbstractStreamEx","l":"peek(Consumer<? super T>)","url":"peek(java.util.function.Consumer)"},{"p":"one.util.streamex","c":"DoubleStreamEx","l":"peek(DoubleConsumer)","url":"peek(java.util.function.DoubleConsumer)"},{"p":"one.util.streamex","c":"IntStreamEx","l":"peek(IntConsumer)","url":"peek(java.util.function.IntConsumer)"},{"p":"one.util.streamex","c":"LongStreamEx","l":"peek(LongConsumer)","url":"peek(java.util.function.LongConsumer)"},{"p":"one.util.streamex","c":"StreamEx","l":"peekFirst(Consumer<? super T>)","url":"peekFirst(java.util.function.Consumer)"},{"p":"one.util.streamex","c":"DoubleStreamEx","l":"peekFirst(DoubleConsumer)","url":"peekFirst(java.util.function.DoubleConsumer)"},{"p":"one.util.streamex","c":"IntStreamEx","l":"peekFirst(IntConsumer)","url":"peekFirst(java.util.function.IntConsumer)"},{"p":"one.util.streamex","c":"LongStreamEx","l":"peekFirst(LongConsumer)","url":"peekFirst(java.util.function.LongConsumer)"},{"p":"one.util.streamex","c":"EntryStream","l":"peekKeys(Consumer<? super K>)","url":"peekKeys(java.util.function.Consumer)"},{"p":"one.util.streamex","c":"EntryStream","l":"peekKeyValue(BiConsumer<? super K, ? super V>)","url":"peekKeyValue(java.util.function.BiConsumer)"},{"p":"one.util.streamex","c":"StreamEx","l":"peekLast(Consumer<? super T>)","url":"peekLast(java.util.function.Consumer)"},{"p":"one.util.streamex","c":"DoubleStreamEx","l":"peekLast(DoubleConsumer)","url":"peekLast(java.util.function.DoubleConsumer)"},{"p":"one.util.streamex","c":"IntStreamEx","l":"peekLast(IntConsumer)","url":"peekLast(java.util.function.IntConsumer)"},{"p":"one.util.streamex","c":"LongStreamEx","l":"peekLast(LongConsumer)","url":"peekLast(java.util.function.LongConsumer)"},{"p":"one.util.streamex","c":"EntryStream","l":"peekValues(Consumer<? super V>)","url":"peekValues(java.util.function.Consumer)"},{"p":"one.util.streamex","c":"AbstractStreamEx","l":"prefix(BinaryOperator<T>)","url":"prefix(java.util.function.BinaryOperator)"},{"p":"one.util.streamex","c":"DoubleStreamEx","l":"prefix(DoubleBinaryOperator)","url":"prefix(java.util.function.DoubleBinaryOperator)"},{"p":"one.util.streamex","c":"IntStreamEx","l":"prefix(IntBinaryOperator)","url":"prefix(java.util.function.IntBinaryOperator)"},{"p":"one.util.streamex","c":"LongStreamEx","l":"prefix(LongBinaryOperator)","url":"prefix(java.util.function.LongBinaryOperator)"},{"p":"one.util.streamex","c":"EntryStream","l":"prefixKeys(BinaryOperator<K>)","url":"prefixKeys(java.util.function.BinaryOperator)"},{"p":"one.util.streamex","c":"EntryStream","l":"prefixValues(BinaryOperator<V>)","url":"prefixValues(java.util.function.BinaryOperator)"},{"p":"one.util.streamex","c":"StreamEx","l":"prepend(Collection<? extends T>)","url":"prepend(java.util.Collection)"},{"p":"one.util.streamex","c":"DoubleStreamEx","l":"prepend(double...)"},{"p":"one.util.streamex","c":"DoubleStreamEx","l":"prepend(DoubleStream)","url":"prepend(java.util.stream.DoubleStream)"},{"p":"one.util.streamex","c":"IntStreamEx","l":"prepend(int...)"},{"p":"one.util.streamex","c":"IntStreamEx","l":"prepend(IntStream)","url":"prepend(java.util.stream.IntStream)"},{"p":"one.util.streamex","c":"EntryStream","l":"prepend(K, V, K, V, K, V)","url":"prepend(K,V,K,V,K,V)"},{"p":"one.util.streamex","c":"EntryStream","l":"prepend(K, V, K, V)","url":"prepend(K,V,K,V)"},{"p":"one.util.streamex","c":"EntryStream","l":"prepend(K, V)","url":"prepend(K,V)"},{"p":"one.util.streamex","c":"LongStreamEx","l":"prepend(long...)"},{"p":"one.util.streamex","c":"LongStreamEx","l":"prepend(LongStream)","url":"prepend(java.util.stream.LongStream)"},{"p":"one.util.streamex","c":"EntryStream","l":"prepend(Map<K, V>)","url":"prepend(java.util.Map)"},{"p":"one.util.streamex","c":"AbstractStreamEx","l":"prepend(Stream<? extends T>)","url":"prepend(java.util.stream.Stream)"},{"p":"one.util.streamex","c":"StreamEx","l":"prepend(T...)"},{"p":"one.util.streamex","c":"StreamEx","l":"prepend(T)"},{"p":"one.util.streamex","c":"StreamEx","l":"produce(Predicate<Consumer<? super T>>)","url":"produce(java.util.function.Predicate)"},{"p":"one.util.streamex","c":"DoubleStreamEx","l":"produce(Predicate<DoubleConsumer>)","url":"produce(java.util.function.Predicate)"},{"p":"one.util.streamex","c":"IntStreamEx","l":"produce(Predicate<IntConsumer>)","url":"produce(java.util.function.Predicate)"},{"p":"one.util.streamex","c":"LongStreamEx","l":"produce(Predicate<LongConsumer>)","url":"produce(java.util.function.Predicate)"},{"p":"one.util.streamex","c":"IntStreamEx","l":"range(int, int, int)","url":"range(int,int,int)"},{"p":"one.util.streamex","c":"IntStreamEx","l":"range(int, int)","url":"range(int,int)"},{"p":"one.util.streamex","c":"IntStreamEx","l":"range(int)"},{"p":"one.util.streamex","c":"LongStreamEx","l":"range(long, long, long)","url":"range(long,long,long)"},{"p":"one.util.streamex","c":"LongStreamEx","l":"range(long, long)","url":"range(long,long)"},{"p":"one.util.streamex","c":"LongStreamEx","l":"range(long)"},{"p":"one.util.streamex","c":"IntStreamEx","l":"rangeClosed(int, int, int)","url":"rangeClosed(int,int,int)"},{"p":"one.util.streamex","c":"IntStreamEx","l":"rangeClosed(int, int)","url":"rangeClosed(int,int)"},{"p":"one.util.streamex","c":"LongStreamEx","l":"rangeClosed(long, long, long)","url":"rangeClosed(long,long,long)"},{"p":"one.util.streamex","c":"LongStreamEx","l":"rangeClosed(long, long)","url":"rangeClosed(long,long)"},{"p":"one.util.streamex","c":"AbstractStreamEx","l":"reduce(BinaryOperator<T>)","url":"reduce(java.util.function.BinaryOperator)"},{"p":"one.util.streamex","c":"DoubleStreamEx","l":"reduce(double, DoubleBinaryOperator)","url":"reduce(double,java.util.function.DoubleBinaryOperator)"},{"p":"one.util.streamex","c":"DoubleStreamEx","l":"reduce(DoubleBinaryOperator)","url":"reduce(java.util.function.DoubleBinaryOperator)"},{"p":"one.util.streamex","c":"IntStreamEx","l":"reduce(int, IntBinaryOperator)","url":"reduce(int,java.util.function.IntBinaryOperator)"},{"p":"one.util.streamex","c":"IntStreamEx","l":"reduce(IntBinaryOperator)","url":"reduce(java.util.function.IntBinaryOperator)"},{"p":"one.util.streamex","c":"LongStreamEx","l":"reduce(long, LongBinaryOperator)","url":"reduce(long,java.util.function.LongBinaryOperator)"},{"p":"one.util.streamex","c":"LongStreamEx","l":"reduce(LongBinaryOperator)","url":"reduce(java.util.function.LongBinaryOperator)"},{"p":"one.util.streamex","c":"AbstractStreamEx","l":"reduce(T, BinaryOperator<T>)","url":"reduce(T,java.util.function.BinaryOperator)"},{"p":"one.util.streamex","c":"AbstractStreamEx","l":"reduce(U, BiFunction<U, ? super T, U>, BinaryOperator<U>)","url":"reduce(U,java.util.function.BiFunction,java.util.function.BinaryOperator)"},{"p":"one.util.streamex","c":"DoubleCollector","l":"reducing(double, DoubleBinaryOperator)","url":"reducing(double,java.util.function.DoubleBinaryOperator)"},{"p":"one.util.streamex","c":"DoubleCollector","l":"reducing(DoubleBinaryOperator)","url":"reducing(java.util.function.DoubleBinaryOperator)"},{"p":"one.util.streamex","c":"IntCollector","l":"reducing(int, IntBinaryOperator)","url":"reducing(int,java.util.function.IntBinaryOperator)"},{"p":"one.util.streamex","c":"IntCollector","l":"reducing(IntBinaryOperator)","url":"reducing(java.util.function.IntBinaryOperator)"},{"p":"one.util.streamex","c":"LongCollector","l":"reducing(long, LongBinaryOperator)","url":"reducing(long,java.util.function.LongBinaryOperator)"},{"p":"one.util.streamex","c":"LongCollector","l":"reducing(LongBinaryOperator)","url":"reducing(java.util.function.LongBinaryOperator)"},{"p":"one.util.streamex","c":"DoubleStreamEx","l":"remove(DoublePredicate)","url":"remove(java.util.function.DoublePredicate)"},{"p":"one.util.streamex","c":"IntStreamEx","l":"remove(IntPredicate)","url":"remove(java.util.function.IntPredicate)"},{"p":"one.util.streamex","c":"LongStreamEx","l":"remove(LongPredicate)","url":"remove(java.util.function.LongPredicate)"},{"p":"one.util.streamex","c":"AbstractStreamEx","l":"remove(Predicate<? super T>)","url":"remove(java.util.function.Predicate)"},{"p":"one.util.streamex","c":"StreamEx","l":"removeBy(Function<? super T, ? extends K>, K)","url":"removeBy(java.util.function.Function,K)"},{"p":"one.util.streamex","c":"EntryStream","l":"removeKeys(Predicate<? super K>)","url":"removeKeys(java.util.function.Predicate)"},{"p":"one.util.streamex","c":"EntryStream","l":"removeKeyValue(BiPredicate<? super K, ? super V>)","url":"removeKeyValue(java.util.function.BiPredicate)"},{"p":"one.util.streamex","c":"EntryStream","l":"removeValues(Predicate<? super V>)","url":"removeValues(java.util.function.Predicate)"},{"p":"one.util.streamex","c":"DoubleStreamEx","l":"reverseSorted()"},{"p":"one.util.streamex","c":"IntStreamEx","l":"reverseSorted()"},{"p":"one.util.streamex","c":"LongStreamEx","l":"reverseSorted()"},{"p":"one.util.streamex","c":"StreamEx","l":"reverseSorted()"},{"p":"one.util.streamex","c":"AbstractStreamEx","l":"reverseSorted(Comparator<? super T>)","url":"reverseSorted(java.util.Comparator)"},{"p":"one.util.streamex","c":"StreamEx","l":"runLengths()"},{"p":"one.util.streamex","c":"AbstractStreamEx","l":"scanLeft(BinaryOperator<T>)","url":"scanLeft(java.util.function.BinaryOperator)"},{"p":"one.util.streamex","c":"DoubleStreamEx","l":"scanLeft(double, DoubleBinaryOperator)","url":"scanLeft(double,java.util.function.DoubleBinaryOperator)"},{"p":"one.util.streamex","c":"DoubleStreamEx","l":"scanLeft(DoubleBinaryOperator)","url":"scanLeft(java.util.function.DoubleBinaryOperator)"},{"p":"one.util.streamex","c":"IntStreamEx","l":"scanLeft(int, IntBinaryOperator)","url":"scanLeft(int,java.util.function.IntBinaryOperator)"},{"p":"one.util.streamex","c":"IntStreamEx","l":"scanLeft(IntBinaryOperator)","url":"scanLeft(java.util.function.IntBinaryOperator)"},{"p":"one.util.streamex","c":"LongStreamEx","l":"scanLeft(long, LongBinaryOperator)","url":"scanLeft(long,java.util.function.LongBinaryOperator)"},{"p":"one.util.streamex","c":"LongStreamEx","l":"scanLeft(LongBinaryOperator)","url":"scanLeft(java.util.function.LongBinaryOperator)"},{"p":"one.util.streamex","c":"AbstractStreamEx","l":"scanLeft(U, BiFunction<U, ? super T, U>)","url":"scanLeft(U,java.util.function.BiFunction)"},{"p":"one.util.streamex","c":"AbstractStreamEx","l":"scanRight(BinaryOperator<T>)","url":"scanRight(java.util.function.BinaryOperator)"},{"p":"one.util.streamex","c":"AbstractStreamEx","l":"scanRight(U, BiFunction<? super T, U, U>)","url":"scanRight(U,java.util.function.BiFunction)"},{"p":"one.util.streamex","c":"StreamEx","l":"select(Class<TT>)","url":"select(java.lang.Class)"},{"p":"one.util.streamex","c":"EntryStream","l":"selectKeys(Class<KK>)","url":"selectKeys(java.lang.Class)"},{"p":"one.util.streamex","c":"EntryStream","l":"selectValues(Class<VV>)","url":"selectValues(java.lang.Class)"},{"p":"one.util.streamex","c":"AbstractStreamEx","l":"sequential()"},{"p":"one.util.streamex","c":"DoubleStreamEx","l":"sequential()"},{"p":"one.util.streamex","c":"IntStreamEx","l":"sequential()"},{"p":"one.util.streamex","c":"LongStreamEx","l":"sequential()"},{"p":"one.util.streamex","c":"AbstractStreamEx","l":"skip(long)"},{"p":"one.util.streamex","c":"DoubleStreamEx","l":"skip(long)"},{"p":"one.util.streamex","c":"IntStreamEx","l":"skip(long)"},{"p":"one.util.streamex","c":"LongStreamEx","l":"skip(long)"},{"p":"one.util.streamex","c":"AbstractStreamEx","l":"sorted()"},{"p":"one.util.streamex","c":"DoubleStreamEx","l":"sorted()"},{"p":"one.util.streamex","c":"IntStreamEx","l":"sorted()"},{"p":"one.util.streamex","c":"LongStreamEx","l":"sorted()"},{"p":"one.util.streamex","c":"AbstractStreamEx","l":"sorted(Comparator<? super T>)","url":"sorted(java.util.Comparator)"},{"p":"one.util.streamex","c":"DoubleStreamEx","l":"sorted(Comparator<Double>)","url":"sorted(java.util.Comparator)"},{"p":"one.util.streamex","c":"IntStreamEx","l":"sorted(Comparator<Integer>)","url":"sorted(java.util.Comparator)"},{"p":"one.util.streamex","c":"LongStreamEx","l":"sorted(Comparator<Long>)","url":"sorted(java.util.Comparator)"},{"p":"one.util.streamex","c":"DoubleStreamEx","l":"sortedBy(DoubleFunction<V>)","url":"sortedBy(java.util.function.DoubleFunction)"},{"p":"one.util.streamex","c":"AbstractStreamEx","l":"sortedBy(Function<? super T, ? extends V>)","url":"sortedBy(java.util.function.Function)"},{"p":"one.util.streamex","c":"IntStreamEx","l":"sortedBy(IntFunction<V>)","url":"sortedBy(java.util.function.IntFunction)"},{"p":"one.util.streamex","c":"LongStreamEx","l":"sortedBy(LongFunction<V>)","url":"sortedBy(java.util.function.LongFunction)"},{"p":"one.util.streamex","c":"DoubleStreamEx","l":"sortedByDouble(DoubleUnaryOperator)","url":"sortedByDouble(java.util.function.DoubleUnaryOperator)"},{"p":"one.util.streamex","c":"IntStreamEx","l":"sortedByDouble(IntToDoubleFunction)","url":"sortedByDouble(java.util.function.IntToDoubleFunction)"},{"p":"one.util.streamex","c":"LongStreamEx","l":"sortedByDouble(LongToDoubleFunction)","url":"sortedByDouble(java.util.function.LongToDoubleFunction)"},{"p":"one.util.streamex","c":"AbstractStreamEx","l":"sortedByDouble(ToDoubleFunction<? super T>)","url":"sortedByDouble(java.util.function.ToDoubleFunction)"},{"p":"one.util.streamex","c":"DoubleStreamEx","l":"sortedByInt(DoubleToIntFunction)","url":"sortedByInt(java.util.function.DoubleToIntFunction)"},{"p":"one.util.streamex","c":"IntStreamEx","l":"sortedByInt(IntUnaryOperator)","url":"sortedByInt(java.util.function.IntUnaryOperator)"},{"p":"one.util.streamex","c":"LongStreamEx","l":"sortedByInt(LongToIntFunction)","url":"sortedByInt(java.util.function.LongToIntFunction)"},{"p":"one.util.streamex","c":"AbstractStreamEx","l":"sortedByInt(ToIntFunction<? super T>)","url":"sortedByInt(java.util.function.ToIntFunction)"},{"p":"one.util.streamex","c":"DoubleStreamEx","l":"sortedByLong(DoubleToLongFunction)","url":"sortedByLong(java.util.function.DoubleToLongFunction)"},{"p":"one.util.streamex","c":"IntStreamEx","l":"sortedByLong(IntToLongFunction)","url":"sortedByLong(java.util.function.IntToLongFunction)"},{"p":"one.util.streamex","c":"LongStreamEx","l":"sortedByLong(LongUnaryOperator)","url":"sortedByLong(java.util.function.LongUnaryOperator)"},{"p":"one.util.streamex","c":"AbstractStreamEx","l":"sortedByLong(ToLongFunction<? super T>)","url":"sortedByLong(java.util.function.ToLongFunction)"},{"p":"one.util.streamex","c":"StreamEx","l":"split(CharSequence, char, boolean)","url":"split(java.lang.CharSequence,char,boolean)"},{"p":"one.util.streamex","c":"StreamEx","l":"split(CharSequence, char)","url":"split(java.lang.CharSequence,char)"},{"p":"one.util.streamex","c":"StreamEx","l":"split(CharSequence, Pattern)","url":"split(java.lang.CharSequence,java.util.regex.Pattern)"},{"p":"one.util.streamex","c":"StreamEx","l":"split(CharSequence, String)","url":"split(java.lang.CharSequence,java.lang.String)"},{"p":"one.util.streamex","c":"DoubleStreamEx.DoubleEmitter","l":"spliterator()"},{"p":"one.util.streamex","c":"IntStreamEx.IntEmitter","l":"spliterator()"},{"p":"one.util.streamex","c":"LongStreamEx.LongEmitter","l":"spliterator()"},{"p":"one.util.streamex","c":"StreamEx.Emitter","l":"spliterator()"},{"p":"one.util.streamex","c":"DoubleStreamEx.DoubleEmitter","l":"stream()"},{"p":"one.util.streamex","c":"IntStreamEx.IntEmitter","l":"stream()"},{"p":"one.util.streamex","c":"LongStreamEx.LongEmitter","l":"stream()"},{"p":"one.util.streamex","c":"StreamEx.Emitter","l":"stream()"},{"p":"one.util.streamex","c":"DoubleStreamEx","l":"sum()"},{"p":"one.util.streamex","c":"IntStreamEx","l":"sum()"},{"p":"one.util.streamex","c":"LongStreamEx","l":"sum()"},{"p":"one.util.streamex","c":"DoubleCollector","l":"summarizing()"},{"p":"one.util.streamex","c":"IntCollector","l":"summarizing()"},{"p":"one.util.streamex","c":"LongCollector","l":"summarizing()"},{"p":"one.util.streamex","c":"DoubleStreamEx","l":"summaryStatistics()"},{"p":"one.util.streamex","c":"IntStreamEx","l":"summaryStatistics()"},{"p":"one.util.streamex","c":"LongStreamEx","l":"summaryStatistics()"},{"p":"one.util.streamex","c":"DoubleCollector","l":"summing()"},{"p":"one.util.streamex","c":"IntCollector","l":"summing()"},{"p":"one.util.streamex","c":"LongCollector","l":"summing()"},{"p":"one.util.streamex","c":"Joining","l":"supplier()"},{"p":"one.util.streamex","c":"MoreCollectors","l":"tail(int)"},{"p":"one.util.streamex","c":"DoubleStreamEx","l":"takeWhile(DoublePredicate)","url":"takeWhile(java.util.function.DoublePredicate)"},{"p":"one.util.streamex","c":"IntStreamEx","l":"takeWhile(IntPredicate)","url":"takeWhile(java.util.function.IntPredicate)"},{"p":"one.util.streamex","c":"LongStreamEx","l":"takeWhile(LongPredicate)","url":"takeWhile(java.util.function.LongPredicate)"},{"p":"one.util.streamex","c":"AbstractStreamEx","l":"takeWhile(Predicate<? super T>)","url":"takeWhile(java.util.function.Predicate)"},{"p":"one.util.streamex","c":"DoubleStreamEx","l":"takeWhileInclusive(DoublePredicate)","url":"takeWhileInclusive(java.util.function.DoublePredicate)"},{"p":"one.util.streamex","c":"IntStreamEx","l":"takeWhileInclusive(IntPredicate)","url":"takeWhileInclusive(java.util.function.IntPredicate)"},{"p":"one.util.streamex","c":"LongStreamEx","l":"takeWhileInclusive(LongPredicate)","url":"takeWhileInclusive(java.util.function.LongPredicate)"},{"p":"one.util.streamex","c":"AbstractStreamEx","l":"takeWhileInclusive(Predicate<? super T>)","url":"takeWhileInclusive(java.util.function.Predicate)"},{"p":"one.util.streamex","c":"AbstractStreamEx","l":"toArray()"},{"p":"one.util.streamex","c":"DoubleCollector","l":"toArray()"},{"p":"one.util.streamex","c":"DoubleStreamEx","l":"toArray()"},{"p":"one.util.streamex","c":"IntCollector","l":"toArray()"},{"p":"one.util.streamex","c":"IntStreamEx","l":"toArray()"},{"p":"one.util.streamex","c":"LongCollector","l":"toArray()"},{"p":"one.util.streamex","c":"LongStreamEx","l":"toArray()"},{"p":"one.util.streamex","c":"StreamEx","l":"toArray(A[])"},{"p":"one.util.streamex","c":"StreamEx","l":"toArray(Class<A>)","url":"toArray(java.lang.Class)"},{"p":"one.util.streamex","c":"AbstractStreamEx","l":"toArray(IntFunction<A[]>)","url":"toArray(java.util.function.IntFunction)"},{"p":"one.util.streamex","c":"MoreCollectors","l":"toArray(IntFunction<T[]>)","url":"toArray(java.util.function.IntFunction)"},{"p":"one.util.streamex","c":"IntCollector","l":"toBitSet()"},{"p":"one.util.streamex","c":"IntStreamEx","l":"toBitSet()"},{"p":"one.util.streamex","c":"DoubleCollector","l":"toBooleanArray(DoublePredicate)","url":"toBooleanArray(java.util.function.DoublePredicate)"},{"p":"one.util.streamex","c":"IntCollector","l":"toBooleanArray(IntPredicate)","url":"toBooleanArray(java.util.function.IntPredicate)"},{"p":"one.util.streamex","c":"LongCollector","l":"toBooleanArray(LongPredicate)","url":"toBooleanArray(java.util.function.LongPredicate)"},{"p":"one.util.streamex","c":"MoreCollectors","l":"toBooleanArray(Predicate<T>)","url":"toBooleanArray(java.util.function.Predicate)"},{"p":"one.util.streamex","c":"IntCollector","l":"toByteArray()"},{"p":"one.util.streamex","c":"IntStreamEx","l":"toByteArray()"},{"p":"one.util.streamex","c":"IntCollector","l":"toCharArray()"},{"p":"one.util.streamex","c":"IntStreamEx","l":"toCharArray()"},{"p":"one.util.streamex","c":"AbstractStreamEx","l":"toCollection(Supplier<C>)","url":"toCollection(java.util.function.Supplier)"},{"p":"one.util.streamex","c":"EntryStream","l":"toCustomMap(BinaryOperator<V>, Supplier<M>)","url":"toCustomMap(java.util.function.BinaryOperator,java.util.function.Supplier)"},{"p":"one.util.streamex","c":"EntryStream","l":"toCustomMap(Supplier<M>)","url":"toCustomMap(java.util.function.Supplier)"},{"p":"one.util.streamex","c":"MoreCollectors","l":"toEnumSet(Class<T>)","url":"toEnumSet(java.lang.Class)"},{"p":"one.util.streamex","c":"StreamEx","l":"toFlatCollection(Function<? super T, ? extends Collection<U>>, Supplier<C>)","url":"toFlatCollection(java.util.function.Function,java.util.function.Supplier)"},{"p":"one.util.streamex","c":"StreamEx","l":"toFlatList(Function<? super T, ? extends Collection<U>>)","url":"toFlatList(java.util.function.Function)"},{"p":"one.util.streamex","c":"DoubleCollector","l":"toFloatArray()"},{"p":"one.util.streamex","c":"DoubleStreamEx","l":"toFloatArray()"},{"p":"one.util.streamex","c":"AbstractStreamEx","l":"toImmutableList()"},{"p":"one.util.streamex","c":"EntryStream","l":"toImmutableMap()"},{"p":"one.util.streamex","c":"AbstractStreamEx","l":"toImmutableSet()"},{"p":"one.util.streamex","c":"AbstractStreamEx","l":"toList()"},{"p":"one.util.streamex","c":"AbstractStreamEx","l":"toListAndThen(Function<? super List<T>, R>)","url":"toListAndThen(java.util.function.Function)"},{"p":"one.util.streamex","c":"EntryStream","l":"toMap()"},{"p":"one.util.streamex","c":"EntryStream","l":"toMap(BinaryOperator<V>)","url":"toMap(java.util.function.BinaryOperator)"},{"p":"one.util.streamex","c":"StreamEx","l":"toMap(Function<? super T, ? extends K>, Function<? super T, ? extends V>, BinaryOperator<V>)","url":"toMap(java.util.function.Function,java.util.function.Function,java.util.function.BinaryOperator)"},{"p":"one.util.streamex","c":"StreamEx","l":"toMap(Function<? super T, ? extends K>, Function<? super T, ? extends V>)","url":"toMap(java.util.function.Function,java.util.function.Function)"},{"p":"one.util.streamex","c":"StreamEx","l":"toMap(Function<? super T, ? extends V>)","url":"toMap(java.util.function.Function)"},{"p":"one.util.streamex","c":"EntryStream","l":"toMapAndThen(Function<? super Map<K, V>, R>)","url":"toMapAndThen(java.util.function.Function)"},{"p":"one.util.streamex","c":"EntryStream","l":"toNavigableMap()"},{"p":"one.util.streamex","c":"EntryStream","l":"toNavigableMap(BinaryOperator<V>)","url":"toNavigableMap(java.util.function.BinaryOperator)"},{"p":"one.util.streamex","c":"StreamEx","l":"toNavigableMap(Function<? super T, ? extends K>, Function<? super T, ? extends V>, BinaryOperator<V>)","url":"toNavigableMap(java.util.function.Function,java.util.function.Function,java.util.function.BinaryOperator)"},{"p":"one.util.streamex","c":"StreamEx","l":"toNavigableMap(Function<? super T, ? extends K>, Function<? super T, ? extends V>)","url":"toNavigableMap(java.util.function.Function,java.util.function.Function)"},{"p":"one.util.streamex","c":"StreamEx","l":"toNavigableMap(Function<? super T, ? extends V>)","url":"toNavigableMap(java.util.function.Function)"},{"p":"one.util.streamex","c":"AbstractStreamEx","l":"toSet()"},{"p":"one.util.streamex","c":"AbstractStreamEx","l":"toSetAndThen(Function<? super Set<T>, R>)","url":"toSetAndThen(java.util.function.Function)"},{"p":"one.util.streamex","c":"IntCollector","l":"toShortArray()"},{"p":"one.util.streamex","c":"IntStreamEx","l":"toShortArray()"},{"p":"one.util.streamex","c":"EntryStream","l":"toSortedMap()"},{"p":"one.util.streamex","c":"EntryStream","l":"toSortedMap(BinaryOperator<V>)","url":"toSortedMap(java.util.function.BinaryOperator)"},{"p":"one.util.streamex","c":"StreamEx","l":"toSortedMap(Function<? super T, ? extends K>, Function<? super T, ? extends V>, BinaryOperator<V>)","url":"toSortedMap(java.util.function.Function,java.util.function.Function,java.util.function.BinaryOperator)"},{"p":"one.util.streamex","c":"StreamEx","l":"toSortedMap(Function<? super T, ? extends K>, Function<? super T, ? extends V>)","url":"toSortedMap(java.util.function.Function,java.util.function.Function)"},{"p":"one.util.streamex","c":"StreamEx","l":"toSortedMap(Function<? super T, ? extends V>)","url":"toSortedMap(java.util.function.Function)"},{"p":"one.util.streamex","c":"AbstractStreamEx","l":"unordered()"},{"p":"one.util.streamex","c":"DoubleStreamEx","l":"unordered()"},{"p":"one.util.streamex","c":"IntStreamEx","l":"unordered()"},{"p":"one.util.streamex","c":"LongStreamEx","l":"unordered()"},{"p":"one.util.streamex","c":"EntryStream","l":"values()"},{"p":"one.util.streamex","c":"Joining","l":"with(CharSequence)","url":"with(java.lang.CharSequence)"},{"p":"one.util.streamex","c":"StreamEx","l":"withFirst()"},{"p":"one.util.streamex","c":"StreamEx","l":"withFirst(BiFunction<? super T, ? super T, ? extends R>)","url":"withFirst(java.util.function.BiFunction)"},{"p":"one.util.streamex","c":"IntStreamEx","l":"without(int...)"},{"p":"one.util.streamex","c":"IntStreamEx","l":"without(int)"},{"p":"one.util.streamex","c":"LongStreamEx","l":"without(long...)"},{"p":"one.util.streamex","c":"LongStreamEx","l":"without(long)"},{"p":"one.util.streamex","c":"StreamEx","l":"without(T...)"},{"p":"one.util.streamex","c":"StreamEx","l":"without(T)"},{"p":"one.util.streamex","c":"Joining","l":"wrap(CharSequence, CharSequence)","url":"wrap(java.lang.CharSequence,java.lang.CharSequence)"},{"p":"one.util.streamex","c":"DoubleStreamEx","l":"zip(double[], double[], DoubleBinaryOperator)","url":"zip(double[],double[],java.util.function.DoubleBinaryOperator)"},{"p":"one.util.streamex","c":"IntStreamEx","l":"zip(int[], int[], IntBinaryOperator)","url":"zip(int[],int[],java.util.function.IntBinaryOperator)"},{"p":"one.util.streamex","c":"EntryStream","l":"zip(K[], V[])","url":"zip(K[],V[])"},{"p":"one.util.streamex","c":"EntryStream","l":"zip(List<K>, List<V>)","url":"zip(java.util.List,java.util.List)"},{"p":"one.util.streamex","c":"StreamEx","l":"zip(List<U>, List<V>, BiFunction<? super U, ? super V, ? extends T>)","url":"zip(java.util.List,java.util.List,java.util.function.BiFunction)"},{"p":"one.util.streamex","c":"LongStreamEx","l":"zip(long[], long[], LongBinaryOperator)","url":"zip(long[],long[],java.util.function.LongBinaryOperator)"},{"p":"one.util.streamex","c":"StreamEx","l":"zip(U[], V[], BiFunction<? super U, ? super V, ? extends T>)","url":"zip(U[],V[],java.util.function.BiFunction)"},{"p":"one.util.streamex","c":"StreamEx","l":"zipWith(BaseStream<V, ?>, BiFunction<? super T, ? super V, ? extends R>)","url":"zipWith(java.util.stream.BaseStream,java.util.function.BiFunction)"},{"p":"one.util.streamex","c":"StreamEx","l":"zipWith(BaseStream<V, ?>)","url":"zipWith(java.util.stream.BaseStream)"},{"p":"one.util.streamex","c":"StreamEx","l":"zipWith(Stream<V>, BiFunction<? super T, ? super V, ? extends R>)","url":"zipWith(java.util.stream.Stream,java.util.function.BiFunction)"},{"p":"one.util.streamex","c":"StreamEx","l":"zipWith(Stream<V>)","url":"zipWith(java.util.stream.Stream)"}]